<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="177" failures="0" errors="0" skipped="136" time="0.174146">
  <testsuite failures="0" errors="0" skipped="0" tests="4" time="0.174146" name="Authorization Failure Reporting">
    <testcase classname="Authorization Failure Reporting" name="Publish simple message with valid ttl and auth permissions" time="0.152849">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with valid ttl and auth permissions"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Authorization Failure Reporting" name="Publish simple message with expired auth token" time="0.007692">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with expired auth token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authFailureExpired"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Authorization Failure Reporting" name="Publish simple message with invalid auth permissions" time="0.006773">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with invalid auth permissions"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authFailurePermissions"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Authorization Failure Reporting" name="Publish fails due to revoked token" time="0.006832">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with revoked auth token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authFailureRevoked"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="0" tests="1" time="0.009801" name="Grant an access token">
    <testcase classname="Grant an access token" name="Attempt to grant an access token when ttl provided exceeds the max ttl configured (use default max 43200 for the test)" time="0.009801">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Grant request with ttl exceed max ttl"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"grantWithTTLExceedMaxTTL"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="0" tests="4" time="0.037241" name="Revoke an access token">
    <testcase classname="Revoke an access token" name="Revoke existing valid token" time="0.006578">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke existing valid token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeValidToken"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Revoke an access token" name="Revoke invalid token" time="0.006448">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke an invalid token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeInvalidToken"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Revoke an access token" name="Revoke a token while it is disabled on a server" time="0.014693">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke a token while it is disabled on a server"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeFeatureDisabled"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Revoke an access token" name="Revoke a token with characters that require url encoding" time="0.009522">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke request verify characters with url encoding"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeEncodePathParameter"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="0" tests="32" time="0.023774" name="Crypto module">
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-legacy-civ.jpg | unknown cryptor error |)" time="0.005942">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-no-version.txt | decryption error |)" time="0.000304">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-unknown-acrh.jpg | unknown cryptor error |)" time="0.000938">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-v1-short.txt | decryption error |)" time="0.000299">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-v1-unknown.txt | unknown cryptor error |)" time="0.000442">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | empty-file-cryptor-v1-acrh.txt | decryption error |)" time="0.000308">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-v1-acrh.jpg | success |)" time="0.001247">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | legacy | pubnubenigma | constant |)" time="0.000644">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | legacy | pubnubenigma | random |)" time="0.000342">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | acrh | pubnubenigma | - |)" time="0.000308">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | acrh | pubnubenigma | - |)" time="0.000307">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | legacy | pubnubenigma | constant | empty-file.txt |)" time="0.000777">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | legacy | pubnubenigma | random | empty-file.txt |)" time="0.000339">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | acrh | pubnubenigma | - | empty-file.txt |)" time="0.000350">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | legacy | pubnubenigma | random | empty-file-cryptor-legacy-riv.txt |)" time="0.000341">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | acrh | pubnubenigma | - | empty-file-cryptor-v1-acrh.txt |)" time="0.000311">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | random | file.jpg |)" time="0.001726">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | constant | file.jpg |)" time="0.001265">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | random | file.txt |)" time="0.000434">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | constant | file.txt |)" time="0.000380">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-cryptor-legacy-civ.jpg | file.jpg |)" time="0.000907">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-cryptor-legacy-riv.jpg | file.jpg |)" time="0.000615">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-cryptor-legacy-civ.txt | file.txt |)" time="0.000354">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-cryptor-legacy-riv.txt | file.txt |)" time="0.000381">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-legacy-civ.jpg | file.jpg |)" time="0.000551">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-legacy-riv.jpg | file.jpg |)" time="0.000643">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-legacy-civ.txt | file.txt |)" time="0.000392">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-legacy-riv.txt | file.txt |)" time="0.000381">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | acrh | pubnubenigma | - | file-cryptor-v1-acrh.jpg | file.jpg |)" time="0.000615">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | acrh | pubnubenigma | - | file-cryptor-v1-acrh.txt | file.txt |)" time="0.000349">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Crypto module can handle encrypted data from different cryptors (outline example : | legacy | acrh | pubnubenigma | constant | file-cryptor-legacy-civ.jpg | file.jpg |)" time="0.000888">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Crypto module" name="Crypto module can handle encrypted data from different cryptors (outline example : | acrh | legacy | pubnubenigma | random | file-legacy-riv.jpg | file.jpg |)" time="0.000691">
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="2" tests="2" time="0.007730" name="Message encryption">
    <testcase classname="Message encryption" name="Receiving an encrypted message with correct crypto key" time="0.004355">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"messageEncryption"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Message encryption" name="Receiving an encrypted message with invalid crypto key" time="0.003375">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"messageEncryption"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.009842" name="Send a file to Space">
    <testcase classname="Send a file to Space" name="Send a file success" time="0.003562">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"sendFileWithType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a file to Space" name="Send a file fails when message type is too short, shorten than 3 characters" time="0.003031">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"sendFileWithTooShortType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a file to Space" name="Send a file fails when message type is too long, longer than 50 characters" time="0.003249">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"sendFileWithTooLongType"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="5" tests="5" time="0.015646" name="Files">
    <testcase classname="Files" name="Listing files" time="0.003446">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"listingFiles"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Files" name="Publishing file message" time="0.003351">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishingFileMessage"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Files" name="Publishing file message failure" time="0.003094">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishingFileMessageFailure"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Files" name="Deleting a file" time="0.002948">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"deletingFile"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Files" name="Downloading a file" time="0.002808">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"downloadingFile"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.010003" name="History for VSP">
    <testcase classname="History for VSP" name="Client can fetch history with message types" time="0.003579">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithPubNubMessageTypes"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="History for VSP" name="Client can fetch history with types" time="0.003349">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithUserAndPubNubTypes"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="History for VSP" name="Client can fetch history without types enabled by default" time="0.003075">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithoutTypes"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.009165" name="History">
    <testcase classname="History" name="Fetching message history" time="0.003282">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageHistory"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="History" name="Fetching message history for multiple channels" time="0.002896">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageHistoryMulti"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="History" name="Fetching message history with message actions" time="0.002988">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageHistoryActions"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="5" tests="5" time="0.015479" name="Message Actions">
    <testcase classname="Message Actions" name="Adding a message action" time="0.003140">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulAddMessageAction"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Message Actions" name="Failing to add a message action" time="0.003000">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedAddMessageAction"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Message Actions" name="Fetching message actions with pagination" time="0.003286">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageActions"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Message Actions" name="Deleting a message action" time="0.003223">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulDeleteMessageAction"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Message Actions" name="Failing to delete a message action" time="0.002831">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedDeleteMessageAction"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="6" tests="6" time="0.019048" name="Objects V2 Channel metadata">
    <testcase classname="Objects V2 Channel metadata" name="Get a channel metadata for id" time="0.003462">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getChannelMetadataOfChat"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Get a channel with custom metadata" time="0.003728">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getChannelMetadataOfDMWithCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Set a channel metadata" time="0.003161">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setChannelMetadataForChat"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Remove a channel metadata for id" time="0.002885">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeChannelMetadataOfChat"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Get all channel metadata" time="0.002987">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllChannelMetadata"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Get all channel metadata with custom" time="0.002825">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllChannelMetadataWithCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="5" tests="5" time="0.015582" name="Objects V2 Members">
    <testcase classname="Objects V2 Members" name="Get members for a channel" time="0.003271">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getMembersOfChatChannel"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Members" name="Get members for VipChat channel with custom and UUID with custom" time="0.003102">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getMembersOfVipChatChannelWithCustomAndUuidWithCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Members" name="Set member for a channel" time="0.003155">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setMembersForChatChannel"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Members" name="Set member with custom for a channel and UUID with custom" time="0.003084">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setMembersForChatChannelWithCustomAndUuidWithCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Members" name="Remove member for a channel" time="0.002969">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeMembersForChatChannel"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="7" tests="7" time="0.022831" name="Objects V2 Memberships">
    <testcase classname="Objects V2 Memberships" name="Get memberships for UUID" time="0.003559">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAliceMemberships"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Get memberships for current user" time="0.003094">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAliceMemberships"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Get memberships for UUID with custom and channel custom" time="0.003207">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getBobMembershipWithCustomAndChannelCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Set membership" time="0.003592">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setAliceMembership"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Set membership for current user" time="0.003250">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setAliceMembership"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Remove membership" time="0.003136">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeAliceMembership"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Remove membership for current user" time="0.002993">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeAliceMembership"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="7" tests="7" time="0.021474" name="Objects V2 UUID metadata">
    <testcase classname="Objects V2 UUID metadata" name="Get a UUID metadata for id" time="0.003311">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getUUIDMetadataOfAlice"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Get a UUID with custom metadata, id stored in config" time="0.003022">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getUUIDMetadataOfBobWithCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Set a UUID metadata" time="0.002919">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setUUIDMetadataForAlice"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Remove a UUID metadata for id" time="0.002897">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeUUIDMetadataOfAlice"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Remove a UUID metadata, id stored in config" time="0.003209">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeUUIDMetadataOfAlice"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Get all UUID metadata" time="0.003125">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllUUIDMetadata"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Get all UUID metadata with custom" time="0.002991">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllUUIDMetadataWithCustom"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="14" tests="14" time="0.027756" name="Presence Event Engine">
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels" time="0.004068">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceTestMultipleWait"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels with presence" time="0.003822">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoin"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Recovery from one unexpected error along the way" time="0.003941">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithAnError"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Complete handshake failure" time="0.003290">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithContinuousFailures"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining and leaving channels" time="0.004034">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceLeave"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining a few channels with heartbeat interval set to 0" time="0.002987">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithHeartbeatDisabled"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Leaving channels while sending out leave requests is disabled" time="0.003718">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceSuppressLeaveEvents"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels" time="0.004204">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceTestMultipleWait"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels with presence" time="0.003400">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoin"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Recovery from one unexpected error along the way" time="0.003965">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithAnError"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Complete handshake failure" time="0.004386">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithContinuousFailures"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining and leaving channels" time="0.004881">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceLeave"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining a few channels with heartbeat interval set to 0" time="0.003391">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithHeartbeatDisabled"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Presence Event Engine" name="Leaving channels while sending out leave requests is disabled" time="0.003530">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceSuppressLeaveEvents"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="2" tests="2" time="0.006619" name="Get presence state">
    <testcase classname="Get presence state" name="Get presence state which has been set on channel using presence/data endpoint" time="0.003273">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getPresenceStateSetUsingPresenceDataEndpoint"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Get presence state" name="Get presence state which has been set on channel using presence/heartbeat endpoint" time="0.003346">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getPresenceStateSetUsingPresenceHeartbeatEndpoint"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.013197" name="Signal user presence">
    <testcase classname="Signal user presence" name="Heartbeat call for channel without 'state' query parameter when state not set" time="0.003738">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"heartbeatWithoutPresenceState"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Signal user presence" name="Heartbeat call for channel with 'state' query parameter when state is set with presence/data endpoint" time="0.003312">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"heartbeatWitPresenceStateSetWithPresenceDataEndpoint"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Signal user presence" name="Heartbeat call for channel with 'state' query parameter when state is set with presence/heartbeat endpoint" time="0.006147">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"heartbeatWitPresenceStateSetWithPresenceHeartbeatEndpoint"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="4" tests="4" time="0.012668" name="Get channels and groups presence">
    <testcase classname="Get channels and groups presence" name="Check active clients on channel without subscribers" time="0.003402">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithNoSubscriptions"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Get channels and groups presence" name="Check active clients on channel with subscribers" time="0.003051">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithSubscriptions"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Get channels and groups presence" name="Check active clients on channel without subscribers and with presence state set with presence/data endpoint" time="0.002773">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithNoSubscriptionsAndPresenceState1"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Get channels and groups presence" name="Check active clients on channel without subscribers but with presence state set with presence/heartbeat endpoint" time="0.003441">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithNoSubscriptionsAndPresenceState2"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="2" tests="2" time="0.006218" name="Set presence state">
    <testcase classname="Set presence state" name="Set presence state on channel using presence/data endpoint" time="0.003425">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setPresenceStateUsingPresenceDataEndpoint"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Set presence state" name="Set presence state on channel using presence/heartbeat endpoint" time="0.002794">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setPresenceStateUsingPresenceHeartbeatEndpoint"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="8" tests="8" time="0.024416" name="Publish to Space">
    <testcase classname="Publish to Space" name="Publish message success" time="0.003510">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type is too short" time="0.003055">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTooShortType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type is too long" time="0.003453">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTooLongType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type starts with reserved 'pn-' (hyphen) string" time="0.002850">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type starts with reserved 'pn_' (underscore) string" time="0.002896">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type starts with not allowed '-' (hyphen) character" time="0.003009">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type starts with not allowed '_' (underscore) character" time="0.002770">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message fails when type contains not allowed characters" time="0.002872">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeContainingNotAllowedCharacter"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="13" tests="13" time="0.039850" name="Publish a message">
    <testcase classname="Publish a message" name="Publish string success" time="0.003793">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithStringSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish dictionary with compression success" time="0.003283">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithCompressionSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish dictionary as POST body success" time="0.002876">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageAsPOSTBodySuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish number success" time="0.003183">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithNumberSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish array success" time="0.003206">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithArraySuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish dictionary success" time="0.003038">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithDictionarySuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with meta success" time="0.002954">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithMetaSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with store success" time="0.002985">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithStoreSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with ttl success" time="0.002851">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithTTLSuccess"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message fails when message payload is larger than 32 KiB" time="0.002975">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithTooLongMessageFail"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with meta fails when meta isn't dictionary" time="0.002876">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithMetaFail"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with the wrong publish key fail" time="0.002923">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithWrongPublishKeyFail"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with the wrong subscribe key fail" time="0.002908">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithWrongSubscribeKeyFail"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="8" tests="8" time="0.023582" name="Send a signal to Space">
    <testcase classname="Send a signal to Space" name="Send a signal success" time="0.003311">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type is too short" time="0.003036">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTooShortType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type is too long" time="0.003033">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTooLongType"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type starts with reserved 'pn-' (hyphen) string" time="0.002945">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type starts with reserved 'pn_' (underscore) string" time="0.002727">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type starts with not allowed '-' (hyphen) character" time="0.002826">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type starts with not allowed '_' (underscore) character" time="0.002839">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal fails when type contains not allowed characters" time="0.002864">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeContainingNotAllowedCharacter"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.002905" name="Signal">
    <testcase classname="Signal" name="Sending a signal" time="0.002905">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulSignal"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="13" tests="13" time="0.027246" name="Push Notifications">
    <testcase classname="Push Notifications" name="Listing push channels for GCM gateway" time="0.003043">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"listingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Listing push channels for APNS2 without topic" time="0.000540">
      <skipped></skipped>
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Listing push channels for APNS2" time="0.002962">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"listingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for GCM" time="0.002651">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"addingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for FCM" time="0.002595">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"addingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for APNS2 without topic" time="0.000539">
      <skipped></skipped>
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for APNS2" time="0.002540">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"addingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Removing push channels for GCM" time="0.002761">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Removing push channels for APNS2 without topic" time="0.000565">
      <skipped></skipped>
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Removing push channels for APNS2" time="0.002586">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingPushChannels"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Removing device for GCM" time="0.002962">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingDevice"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Removing device for APNS2 without topic" time="0.000941">
      <skipped></skipped>
      <system-out></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Push Notifications" name="Removing device for APNS2" time="0.002562">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingDevice"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="7" tests="7" time="0.022605" name="Subscribe Loop auto-retry with access denied">
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry without auth key" time="0.003393">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with invalid PAMv2 auth key" time="0.003014">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with invalid PAMv3 token" time="0.003129">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with invalid secret key" time="0.003100">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with PAMv2 auth key permissions reset after subscribe" time="0.003438">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeInvalidatedAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with PAMv3 token revoked after subscribe" time="0.003413">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeInvalidatedAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with secret key invalidated after subscribe" time="0.003118">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeInvalidatedAuthKey"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.003081" name="Subscribe Loop">
    <testcase classname="Subscribe Loop" name="subscribe and recieve a published message" time="0.003081">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"simpleSubscribe"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="12" tests="12" time="0.02194" name="Event Engine">
    <testcase classname="Event Engine" name="Successfully receive messages" time="0.003455">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"simpleSubscribe"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe" time="0.003470">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribe"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe with failures" time="0.003503">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribeWithFailures"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Complete handshake failure" time="0.003150">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeFailure"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Handshake failure recovery" time="0.003561">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeRecovery"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Receiving failure recovery" time="0.003333">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeReceivingRecovery"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Successfully receive messages" time="0.003987">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"simpleSubscribe"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe" time="0.003487">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribe"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe with failures" time="0.003469">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribeWithFailures"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Complete handshake failure" time="0.003413">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeFailure"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Handshake failure recovery" time="0.003545">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeRecovery"}]]></system-out>
      <system-err></system-err>
    </testcase>
    <testcase classname="Event Engine" name="Receiving failure recovery" time="0.004040">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeReceivingRecovery"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.003397" name="Subscribe for VSP">
    <testcase classname="Subscribe for VSP" name="Client can subscribe and receive messages with types" time="0.003397">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeReceiveMessagesWithTypes"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.002876" name="Time">
    <testcase classname="Time" name="Getting PubNub time" time="0.002876">
      <skipped></skipped>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulTime"}]]></system-out>
      <system-err></system-err>
    </testcase>
  </testsuite>
</testsuites>