<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="192" failures="0" errors="0" skipped="151" time="0.052056">
  <testsuite failures="0" errors="0" skipped="0" tests="4" time="0.052056" name="Authorization Failure Reporting">
    <testcase classname="Authorization Failure Reporting" name="Publish simple message with valid ttl and auth permissions" time="0.032774">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with valid ttl and auth permissions"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Authorization Failure Reporting" name="Publish simple message with expired auth token" time="0.006465">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with expired auth token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authFailureExpired"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Authorization Failure Reporting" name="Publish simple message with invalid auth permissions" time="0.006658">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with invalid auth permissions"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authFailurePermissions"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Authorization Failure Reporting" name="Publish fails due to revoked token" time="0.006158">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Publish simple message with revoked auth token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"authFailureRevoked"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="0" tests="1" time="0.008549" name="Grant an access token">
    <testcase classname="Grant an access token" name="Attempt to grant an access token when ttl provided exceeds the max ttl configured (use default max 43200 for the test)" time="0.008549">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Grant request with ttl exceed max ttl"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"grantWithTTLExceedMaxTTL"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="0" tests="4" time="0.023467" name="Revoke an access token">
    <testcase classname="Revoke an access token" name="Revoke existing valid token" time="0.006028">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke existing valid token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeValidToken"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Revoke an access token" name="Revoke invalid token" time="0.006079">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke an invalid token"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeInvalidToken"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Revoke an access token" name="Revoke a token while it is disabled on a server" time="0.005954">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke a token while it is disabled on a server"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeFeatureDisabled"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Revoke an access token" name="Revoke a token with characters that require url encoding" time="0.005406">
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>["Revoke request verify characters with url encoding"]}, "validations"=>["The current document does not have any resource to match with."], "script"=>"revokeEncodePathParameter"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="0" tests="32" time="0.018543" name="Crypto module">
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-legacy-civ.jpg | unknown cryptor error |)" time="0.000992">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-no-version.txt | decryption error |)" time="0.000305">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-unknown-acrh.jpg | unknown cryptor error |)" time="0.000402">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-v1-short.txt | decryption error |)" time="0.000291">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-v1-unknown.txt | unknown cryptor error |)" time="0.000347">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | empty-file-cryptor-v1-acrh.txt | decryption error |)" time="0.000322">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="AES-CBC cryptor data header can be processed (outline example : | pubnubenigma | file-cryptor-v1-acrh.jpg | success |)" time="0.001129">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | legacy | pubnubenigma | constant |)" time="0.000541">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | legacy | pubnubenigma | random |)" time="0.000322">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | acrh | pubnubenigma | - |)" time="0.000298">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data encryption should fail (outline example : | acrh | pubnubenigma | - |)" time="0.000298">
      <system-out><![CDATA[Pubnub :: ENCRYPTION ERROR: Empty data for encryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | legacy | pubnubenigma | constant | empty-file.txt |)" time="0.000554">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | legacy | pubnubenigma | random | empty-file.txt |)" time="0.000313">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | acrh | pubnubenigma | - | empty-file.txt |)" time="0.000335">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | legacy | pubnubenigma | random | empty-file-cryptor-legacy-riv.txt |)" time="0.000395">
      <system-out><![CDATA[Pubnub :: DECRYPTION ERROR: Empty data for decryption
]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Empty data decryption should fail (outline example : | acrh | pubnubenigma | - | empty-file-cryptor-v1-acrh.txt |)" time="0.000411">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | random | file.jpg |)" time="0.002429">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | constant | file.jpg |)" time="0.001236">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | random | file.txt |)" time="0.000532">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation (outline example : | pubnubenigma | constant | file.txt |)" time="0.000392">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-cryptor-legacy-civ.jpg | file.jpg |)" time="0.000912">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-cryptor-legacy-riv.jpg | file.jpg |)" time="0.000641">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-cryptor-legacy-civ.txt | file.txt |)" time="0.000354">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-cryptor-legacy-riv.txt | file.txt |)" time="0.000352">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-legacy-civ.jpg | file.jpg |)" time="0.000660">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-legacy-riv.jpg | file.jpg |)" time="0.000618">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | constant | file-legacy-civ.txt | file.txt |)" time="0.000337">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | legacy | pubnubenigma | random | file-legacy-riv.txt | file.txt |)" time="0.000341">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | acrh | pubnubenigma | - | file-cryptor-v1-acrh.jpg | file.jpg |)" time="0.000787">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Cryptor is able to process sample files as binary (outline example : | acrh | pubnubenigma | - | file-cryptor-v1-acrh.txt | file.txt |)" time="0.000354">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Crypto module can handle encrypted data from different cryptors (outline example : | legacy | acrh | pubnubenigma | constant | file-cryptor-legacy-civ.jpg | file.jpg |)" time="0.000794">
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Crypto module" name="Crypto module can handle encrypted data from different cryptors (outline example : | acrh | legacy | pubnubenigma | random | file-legacy-riv.jpg | file.jpg |)" time="0.000551">
      <system-out/>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="2" tests="2" time="0.007119" name="Message encryption">
    <testcase classname="Message encryption" name="Receiving an encrypted message with correct crypto key" time="0.004019">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"messageEncryption"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Message encryption" name="Receiving an encrypted message with invalid crypto key" time="0.003100">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"messageEncryption"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.010629" name="Send a file to Space">
    <testcase classname="Send a file to Space" name="Send a file to space success" time="0.004297">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"sendFileWithSpaceIdAndType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a file to Space" name="Send a file to space fails when message type is too short, shorten than 3 characters" time="0.003157">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"sendFileWithTooShortType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a file to Space" name="Send a file to space fails when message type is too long, longer than 50 characters" time="0.003176">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"sendFileWithTooLongType"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="5" tests="5" time="0.015076" name="Files">
    <testcase classname="Files" name="Listing files" time="0.003176">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"listingFiles"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Files" name="Publishing file message" time="0.003039">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishingFileMessage"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Files" name="Publishing file message failure" time="0.002976">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishingFileMessageFailure"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Files" name="Deleting a file" time="0.002965">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"deletingFile"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Files" name="Downloading a file" time="0.002921">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"downloadingFile"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="4" tests="4" time="0.018612" name="History for VSP">
    <testcase classname="History for VSP" name="Client can fetch history with message types" time="0.003556">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithPubNubMessageTypes"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="History for VSP" name="Client can fetch history with types" time="0.008292">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithUserAndPubNubTypes"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="History for VSP" name="Client can fetch history without types enabled by default" time="0.003743">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithoutTypes"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="History for VSP" name="Client can fetch history with space id disabled by default" time="0.003022">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchHistoryWithSpaceId"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.008918" name="History">
    <testcase classname="History" name="Fetching message history" time="0.003321">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageHistory"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="History" name="Fetching message history for multiple channels" time="0.002837">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageHistoryMulti"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="History" name="Fetching message history with message actions" time="0.002760">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageHistoryActions"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="5" tests="5" time="0.015373" name="Message Actions">
    <testcase classname="Message Actions" name="Adding a message action" time="0.003196">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulAddMessageAction"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Message Actions" name="Failing to add a message action" time="0.002843">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedAddMessageAction"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Message Actions" name="Fetching message actions with pagination" time="0.003383">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"fetchMessageActions"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Message Actions" name="Deleting a message action" time="0.002888">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulDeleteMessageAction"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Message Actions" name="Failing to delete a message action" time="0.003063">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedDeleteMessageAction"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="6" tests="6" time="0.018258" name="Objects V2 Channel metadata">
    <testcase classname="Objects V2 Channel metadata" name="Get a channel metadata for id" time="0.003125">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getChannelMetadataOfChat"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Get a channel with custom metadata" time="0.003204">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getChannelMetadataOfDMWithCustom"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Set a channel metadata" time="0.003009">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setChannelMetadataForChat"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Remove a channel metadata for id" time="0.002893">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeChannelMetadataOfChat"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Get all channel metadata" time="0.002971">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllChannelMetadata"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Channel metadata" name="Get all channel metadata with custom" time="0.003055">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllChannelMetadataWithCustom"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="5" tests="5" time="0.015973" name="Objects V2 Members">
    <testcase classname="Objects V2 Members" name="Get members for a channel" time="0.003501">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getMembersOfChatChannel"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Members" name="Get members for VipChat channel with custom and UUID with custom" time="0.003040">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getMembersOfVipChatChannelWithCustomAndUuidWithCustom"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Members" name="Set member for a channel" time="0.003302">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setMembersForChatChannel"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Members" name="Set member with custom for a channel and UUID with custom" time="0.003136">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setMembersForChatChannelWithCustomAndUuidWithCustom"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Members" name="Remove member for a channel" time="0.002994">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeMembersForChatChannel"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="7" tests="7" time="0.024037" name="Objects V2 Memberships">
    <testcase classname="Objects V2 Memberships" name="Get memberships for UUID" time="0.003781">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAliceMemberships"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Get memberships for current user" time="0.003282">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAliceMemberships"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Get memberships for UUID with custom and channel custom" time="0.003270">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getBobMembershipWithCustomAndChannelCustom"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Set membership" time="0.003482">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setAliceMembership"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Set membership for current user" time="0.003169">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setAliceMembership"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Remove membership" time="0.003566">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeAliceMembership"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 Memberships" name="Remove membership for current user" time="0.003487">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeAliceMembership"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="7" tests="7" time="0.022418" name="Objects V2 UUID metadata">
    <testcase classname="Objects V2 UUID metadata" name="Get a UUID metadata for id" time="0.003347">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getUUIDMetadataOfAlice"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Get a UUID with custom metadata, id stored in config" time="0.003342">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getUUIDMetadataOfBobWithCustom"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Set a UUID metadata" time="0.003160">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setUUIDMetadataForAlice"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Remove a UUID metadata for id" time="0.003184">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeUUIDMetadataOfAlice"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Remove a UUID metadata, id stored in config" time="0.003158">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removeUUIDMetadataOfAlice"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Get all UUID metadata" time="0.003116">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllUUIDMetadata"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Objects V2 UUID metadata" name="Get all UUID metadata with custom" time="0.003111">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getAllUUIDMetadataWithCustom"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="14" tests="14" time="0.029" name="Presence Event Engine">
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels" time="0.004030">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceTestMultipleWait"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels with presence" time="0.003498">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoin"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Recovery from one unexpected error along the way" time="0.006740">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithAnError"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Complete handshake failure" time="0.003607">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithContinuousFailures"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining and leaving channels" time="0.004141">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceLeave"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining a few channels with heartbeat interval set to 0" time="0.003354">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithHeartbeatDisabled"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Leaving channels while sending out leave requests is disabled" time="0.003628">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceSuppressLeaveEvents"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels" time="0.003977">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceTestMultipleWait"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Successfully joined a few channels with presence" time="0.003371">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoin"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Recovery from one unexpected error along the way" time="0.004574">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithAnError"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Complete handshake failure" time="0.004405">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithContinuousFailures"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining and leaving channels" time="0.003680">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceLeave"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Joining a few channels with heartbeat interval set to 0" time="0.002849">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceJoinWithHeartbeatDisabled"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Presence Event Engine" name="Leaving channels while sending out leave requests is disabled" time="0.005163">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"presenceSuppressLeaveEvents"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="2" tests="2" time="0.007332" name="Get presence state">
    <testcase classname="Get presence state" name="Get presence state which has been set on channel using presence/data endpoint" time="0.003869">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getPresenceStateSetUsingPresenceDataEndpoint"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Get presence state" name="Get presence state which has been set on channel using presence/heartbeat endpoint" time="0.003463">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"getPresenceStateSetUsingPresenceHeartbeatEndpoint"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="3" tests="3" time="0.009656" name="Signal user presence">
    <testcase classname="Signal user presence" name="Heartbeat call for channel without 'state' query parameter when state not set" time="0.003700">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"heartbeatWithoutPresenceState"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Signal user presence" name="Heartbeat call for channel with 'state' query parameter when state is set with presence/data endpoint" time="0.002931">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"heartbeatWitPresenceStateSetWithPresenceDataEndpoint"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Signal user presence" name="Heartbeat call for channel with 'state' query parameter when state is set with presence/heartbeat endpoint" time="0.003025">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"heartbeatWitPresenceStateSetWithPresenceHeartbeatEndpoint"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="4" tests="4" time="0.011785" name="Get channels and groups presence">
    <testcase classname="Get channels and groups presence" name="Check active clients on channel without subscribers" time="0.003105">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithNoSubscriptions"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Get channels and groups presence" name="Check active clients on channel with subscribers" time="0.002848">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithSubscriptions"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Get channels and groups presence" name="Check active clients on channel without subscribers and with presence state set with presence/data endpoint" time="0.002904">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithNoSubscriptionsAndPresenceState1"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Get channels and groups presence" name="Check active clients on channel without subscribers but with presence state set with presence/heartbeat endpoint" time="0.002927">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"hereNowChannelWithNoSubscriptionsAndPresenceState2"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="2" tests="2" time="0.005536" name="Set presence state">
    <testcase classname="Set presence state" name="Set presence state on channel using presence/data endpoint" time="0.002831">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setPresenceStateUsingPresenceDataEndpoint"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Set presence state" name="Set presence state on channel using presence/heartbeat endpoint" time="0.002705">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"setPresenceStateUsingPresenceHeartbeatEndpoint"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="15" tests="15" time="0.046705" name="Publish to Space">
    <testcase classname="Publish to Space" name="Publish message to space success" time="0.003181">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithSpaceIdAndType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type is too short" time="0.002782">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTooShortType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type is too long" time="0.002796">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTooLongType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id is too short" time="0.002847">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTooShortSpaceId"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id is too long" time="0.003127">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTooLongSpaceId"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id starts with reserved 'pn-' (hyphen) string" time="0.002855">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithSpaceIdStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id starts with reserved 'pn_' (underscore) string" time="0.006093">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithSpaceIdStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id starts with not allowed '-' (hyphen) character" time="0.003305">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithSpaceIdStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id starts with not allowed '_' (underscore) character" time="0.002798">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithSpaceIdStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when space id contains not allowed characters" time="0.002745">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithSpaceIdContainingNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type starts with reserved 'pn-' (hyphen) string" time="0.002966">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type starts with reserved 'pn_' (underscore) string" time="0.002857">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type starts with not allowed '-' (hyphen) character" time="0.002895">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type starts with not allowed '_' (underscore) character" time="0.002705">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish to Space" name="Publish message to space fails when type contains not allowed characters" time="0.002752">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishWithTypeContainingNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="13" tests="13" time="0.038315" name="Publish a message">
    <testcase classname="Publish a message" name="Publish string success" time="0.003133">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithStringSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish dictionary with compression success" time="0.002904">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithCompressionSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish dictionary as POST body success" time="0.002936">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageAsPOSTBodySuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish number success" time="0.003166">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithNumberSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish array success" time="0.002954">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithArraySuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish dictionary success" time="0.002850">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithDictionarySuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with meta success" time="0.003045">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithMetaSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with store success" time="0.002957">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithStoreSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with ttl success" time="0.002760">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithTTLSuccess"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message fails when message payload is larger than 32 KiB" time="0.002998">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithTooLongMessageFail"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with meta fails when meta isn't dictionary" time="0.002761">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithMetaFail"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with the wrong publish key fail" time="0.002945">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithWrongPublishKeyFail"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Publish a message" name="Publish message with the wrong subscribe key fail" time="0.002905">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"publishMessageWithWrongSubscribeKeyFail"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="15" tests="15" time="0.042283" name="Send a signal to Space">
    <testcase classname="Send a signal to Space" name="Send a signal to space success" time="0.003057">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithSpaceIdAndType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type is too short" time="0.002839">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTooShortType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type is too long" time="0.002920">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTooLongType"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id is too short" time="0.002835">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTooShortSpaceId"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id is too long" time="0.002878">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTooLongSpaceId"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id starts with reserved 'pn-' (hyphen) string" time="0.002802">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithSpaceIdStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id starts with reserved 'pn_' (underscore) string" time="0.002780">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithSpaceIdStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id starts with not allowed '-' (hyphen) character" time="0.002789">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithSpaceIdStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id starts with not allowed '_' (underscore) character" time="0.002705">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithSpaceIdStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when space id contains not allowed characters" time="0.002861">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithSpaceIdContainingNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type starts with reserved 'pn-' (hyphen) string" time="0.002719">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type starts with reserved 'pn_' (underscore) string" time="0.002740">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithReservedStrings"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type starts with not allowed '-' (hyphen) character" time="0.002745">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type starts with not allowed '_' (underscore) character" time="0.002799">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeStartingWithNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Send a signal to Space" name="Send a signal to space fails when type contains not allowed characters" time="0.002813">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"signalWithTypeContainingNotAllowedCharacter"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.002981" name="Signal">
    <testcase classname="Signal" name="Sending a signal" time="0.002981">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulSignal"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="13" tests="13" time="0.025771" name="Push Notifications">
    <testcase classname="Push Notifications" name="Listing push channels for GCM gateway" time="0.002864">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"listingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Listing push channels for APNS2 without topic" time="0.000416">
      <skipped/>
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Listing push channels for APNS2" time="0.002606">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"listingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for GCM" time="0.002582">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"addingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for FCM" time="0.002569">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"addingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for APNS2 without topic" time="0.000413">
      <skipped/>
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Adding push channels for APNS2" time="0.002504">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"addingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Removing push channels for GCM" time="0.002734">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Removing push channels for APNS2 without topic" time="0.000438">
      <skipped/>
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Removing push channels for APNS2" time="0.002685">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingPushChannels"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Removing device for GCM" time="0.002769">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingDevice"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Removing device for APNS2 without topic" time="0.000434">
      <skipped/>
      <system-out/>
      <system-err/>
    </testcase>
    <testcase classname="Push Notifications" name="Removing device for APNS2" time="0.002757">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"removingDevice"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="7" tests="7" time="0.023230" name="Subscribe Loop auto-retry with access denied">
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry without auth key" time="0.003919">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with invalid PAMv2 auth key" time="0.003084">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with invalid PAMv3 token" time="0.003082">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with invalid secret key" time="0.003258">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeWithInvalidAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with PAMv2 auth key permissions reset after subscribe" time="0.003317">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeInvalidatedAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with PAMv3 token revoked after subscribe" time="0.003391">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeInvalidatedAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Subscribe Loop auto-retry with access denied" name="don't auto-retry with secret key invalidated after subscribe" time="0.003180">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"failedSubscribeInvalidatedAuthKey"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.003352" name="Subscribe Loop">
    <testcase classname="Subscribe Loop" name="subscribe and recieve a published message" time="0.003352">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"simpleSubscribe"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="12" tests="12" time="0.02127" name="Event Engine">
    <testcase classname="Event Engine" name="Successfully receive messages" time="0.003576">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"simpleSubscribe"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe" time="0.003409">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribe"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe with failures" time="0.003532">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribeWithFailures"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Complete handshake failure" time="0.003039">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeFailure"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Handshake failure recovery" time="0.003247">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeRecovery"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Receiving failure recovery" time="0.003147">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeReceivingRecovery"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Successfully receive messages" time="0.003212">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"simpleSubscribe"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe" time="0.004181">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribe"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Successfully restore subscribe with failures" time="0.003274">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"restoringSubscribeWithFailures"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Complete handshake failure" time="0.003443">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeFailure"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Handshake failure recovery" time="0.003837">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeHandshakeRecovery"}]]></system-out>
      <system-err/>
    </testcase>
    <testcase classname="Event Engine" name="Receiving failure recovery" time="0.003321">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeReceivingRecovery"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.004543" name="Subscribe for VSP">
    <testcase classname="Subscribe for VSP" name="Client can subscribe and receive messages with types" time="0.004543">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"subscribeReceiveMessagesWithTypes"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
  <testsuite failures="0" errors="0" skipped="1" tests="1" time="0.002610" name="Time">
    <testcase classname="Time" name="Getting PubNub time" time="0.002610">
      <skipped/>
      <system-out><![CDATA[{"expectations"=>{"pending"=>[], "failed"=>[], "succeeded"=>[]}, "validations"=>[], "script"=>"successfulTime"}]]></system-out>
      <system-err/>
    </testcase>
  </testsuite>
</testsuites>