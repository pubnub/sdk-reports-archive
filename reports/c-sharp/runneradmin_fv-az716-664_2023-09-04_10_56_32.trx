<?xml version="1.0" encoding="utf-8"?>
<TestRun id="ce6caf4c-9cea-4265-a90e-20a0e20fc80e" name="runneradmin@fv-az716-664 2023-09-04 10:56:32" runUser="fv-az716-664\runneradmin" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2023-09-04T10:56:32.9228628+00:00" queuing="2023-09-04T10:56:32.9228634+00:00" start="2023-09-04T10:56:29.8762248+00:00" finish="2023-09-04T10:56:34.6056779+00:00" />
  <TestSettings name="default" id="45ff7297-a5ec-4467-b3db-590ce9705704">
    <Deployment runDeploymentRoot="runneradmin_fv-az716-664_2023-09-04_10_56_32" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="2e8ba057-995b-4db5-94f0-202764cc37a5" testId="238d7046-3682-e357-765d-2a21c813602e" testName="AttemptToGrantAnAccessTokenWithARegularExpressionContainingASyntaxErrorAndExpectAServerError" computerName="fv-az716-664" duration="00:00:00.0186330" startTime="2023-09-04T10:56:32.5512036+00:00" endTime="2023-09-04T10:56:32.5698376+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2e8ba057-995b-4db5-94f0-202764cc37a5">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the '!&lt;[^&gt;]+&gt;++' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDPatternAccessPermissions("!&lt;[^&gt;]+&gt;++") (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid RegExp'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid RegExp") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Syntax error: multiple repeat.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Syntax error: mul...") (0.0s)&#xD;
* the error detail location is 'permissions.patterns.uuids.!&lt;[^&gt;]+&gt;++'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("permissions.patte...") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="072e81ac-f496-4778-a186-02bd4cad6667" testId="ee450aac-5f02-8238-a55d-792600e33298" testName="RevokeATokenWhileItIsDisabledOnAServer" computerName="fv-az716-664" duration="00:00:00.0203460" startTime="2023-09-04T10:56:34.3397153+00:00" endTime="2023-09-04T10:56:34.3600624+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="072e81ac-f496-4778-a186-02bd4cad6667">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given a token&#xD;
-&gt; done: FeatureAccessSteps.GivenAToken() (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Feature disabled'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Feature disabled") (0.0s)&#xD;
* the error source is 'revoke'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("revoke") (0.0s)&#xD;
* the error detail message is 'Token revocation is disabled.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Token revocation ...") (0.0s)&#xD;
* the error detail location is 'subscribe-key'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("subscribe-key") (0.0s)&#xD;
* the error detail location type is 'path'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("path") (0.0s)&#xD;
* the error service is 'Access Manager'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorServiceIs("Access Manager") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0485234c-fbd7-4569-81aa-ac31ccb91f40" testId="c824fd41-84e4-6d43-8411-04262c295a77" testName="SetMembership" computerName="fv-az716-664" duration="00:00:00.0696040" startTime="2023-09-04T10:56:33.6819049+00:00" endTime="2023-09-04T10:56:33.7515110+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0485234c-fbd7-4569-81aa-ac31ccb91f40">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
When I set the membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheMembership() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMembership("ChatMembership") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="78fbcb91-5b1a-41e7-a250-fb3180d00209" testId="0992672a-4884-80d0-5142-7d4a75036ed9" testName="AttemptToGrantAnAccessTokenWithARegularExpressionContainingCapturingGroupsAndExpectAServerError" computerName="fv-az716-664" duration="00:00:00.0154290" startTime="2023-09-04T10:56:32.5711277+00:00" endTime="2023-09-04T10:56:32.5865574+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="78fbcb91-5b1a-41e7-a250-fb3180d00209">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the '(!&lt;[^&gt;]+&gt;)+' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDPatternAccessPermissions("(!&lt;[^&gt;]+&gt;)+") (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid RegExp'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid RegExp") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Only non-capturing groups are allowed. Try replacing `(` with `(?:`.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Only non-capturin...") (0.0s)&#xD;
* the error detail location is 'permissions.patterns.uuids.(!&lt;[^&gt;]+&gt;)+'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("permissions.patte...") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="39dc4ba5-e70e-4a49-8f4d-57ca0b913fda" testId="4401ff2d-c38b-51a8-f6b5-791f859c7098" testName="GetAChannelMetadataForId" computerName="fv-az716-664" duration="00:00:00.0765919" startTime="2023-09-04T10:56:32.9568602+00:00" endTime="2023-09-04T10:56:33.0334544+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="39dc4ba5-e70e-4a49-8f4d-57ca0b913fda">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I get the channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the channel metadata for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheChannelMetadataForChannel("Chat") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e98814d7-a517-42fd-a320-fd75a8f3d9e2" testId="23b61850-f73c-f5eb-17ca-9aaba5f44c54" testName="GetAllUUIDMetadataWithCustom" computerName="fv-az716-664" duration="00:00:00.0244530" startTime="2023-09-04T10:56:33.8618181+00:00" endTime="2023-09-04T10:56:33.8862721+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e98814d7-a517-42fd-a320-fd75a8f3d9e2">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all UUID metadata with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllUUIDMetadataWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'Bob' and 'Lisa' UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndUUIDMetadata("Bob", "Lisa") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ecd67dd-0d9b-42db-8c0a-f8fd9f2fa69d" testId="85374129-b31e-6699-e3e3-35edfbf2f310" testName="GrantAnAccessTokenWithAllPermissionsOnAllResourceTypesWithAuthorizedUuid" computerName="fv-az716-664" duration="00:00:00.0876690" startTime="2023-09-04T10:56:32.7043300+00:00" endTime="2023-09-04T10:56:32.7920015+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ecd67dd-0d9b-42db-8c0a-f8fd9f2fa69d">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.GivenTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
* grant resource permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionWRITE() (0.0s)&#xD;
* grant resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionGET() (0.0s)&#xD;
* grant resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionMANAGE() (0.0s)&#xD;
* grant resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionUPDATE() (0.0s)&#xD;
* grant resource permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionJOIN() (0.0s)&#xD;
* grant resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionDELETE() (0.0s)&#xD;
Given the 'channel_group-1' CHANNEL_GROUP resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNEL_GROUPResourceAccessPermissions("channel_group-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
* grant resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionMANAGE() (0.0s)&#xD;
Given the 'uuid-1' UUID resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDResourceAccessPermissions("uuid-1") (0.0s)&#xD;
* grant resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionGET() (0.0s)&#xD;
* grant resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionUPDATE() (0.0s)&#xD;
* grant resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionDELETE() (0.0s)&#xD;
Given the '^channel-\S*$' CHANNEL pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELPatternAccessPermissions("^channel-\S*$") (0.0s)&#xD;
* grant pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionREAD() (0.0s)&#xD;
* grant pattern permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionWRITE() (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
* grant pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionMANAGE() (0.0s)&#xD;
* grant pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionUPDATE() (0.0s)&#xD;
* grant pattern permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionJOIN() (0.0s)&#xD;
* grant pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionDELETE() (0.0s)&#xD;
Given the '^:channel_group-\S*$' CHANNEL_GROUP pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNEL_GROUPPatternAccessPermissions("^:channel_group-\S*$") (0.0s)&#xD;
* grant pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionREAD() (0.0s)&#xD;
* grant pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionMANAGE() (0.0s)&#xD;
Given the '^uuid-\S*$' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDPatternAccessPermissions("^uuid-\S*$") (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
* grant pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionUPDATE() (0.0s)&#xD;
* grant pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionDELETE() (0.0s)&#xD;
When I grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then the token contains the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Then the token contains the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheTTL(60) (0.0s)&#xD;
Then the token has 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)&#xD;
* token resource permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionWRITE() (0.0s)&#xD;
* token resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionGET() (0.0s)&#xD;
* token resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionMANAGE() (0.0s)&#xD;
* token resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionUPDATE() (0.0s)&#xD;
* token resource permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionJOIN() (0.0s)&#xD;
* token resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionDELETE() (0.0s)&#xD;
Then the token has 'channel_group-1' CHANNEL_GROUP resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNEL_GROUPResourceAccessPermissions("channel_group-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)&#xD;
* token resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionMANAGE() (0.0s)&#xD;
Then the token has 'uuid-1' UUID resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasUUIDResourceAccessPermissions("uuid-1") (0.0s)&#xD;
* token resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionGET() (0.0s)&#xD;
* token resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionUPDATE() (0.0s)&#xD;
* token resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionDELETE() (0.0s)&#xD;
Then the token has '^channel-\S*$' CHANNEL pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELPatternAccessPermissions("^channel-\S*$") (0.0s)&#xD;
* token pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionREAD() (0.0s)&#xD;
* token pattern permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionWRITE() (0.0s)&#xD;
* token pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionGET() (0.0s)&#xD;
* token pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionMANAGE() (0.0s)&#xD;
* token pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionUPDATE() (0.0s)&#xD;
* token pattern permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionJOIN() (0.0s)&#xD;
* token pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionDELETE() (0.0s)&#xD;
Then the token has '^:channel_group-\S*$' CHANNEL_GROUP pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNEL_GROUPPatternAccessPermissions("^:channel_group-\S*$") (0.0s)&#xD;
* token pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionREAD() (0.0s)&#xD;
* token pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionMANAGE() (0.0s)&#xD;
Then the token has '^uuid-\S*$' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasUUIDPatternAccessPermissions("^uuid-\S*$") (0.0s)&#xD;
* token pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionGET() (0.0s)&#xD;
* token pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionUPDATE() (0.0s)&#xD;
* token pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionDELETE() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="01858270-f720-4da1-aed6-f899eb8f1870" testId="78605226-9a65-4701-5dbe-74fd1152b767" testName="GetAUUIDWithCustomMetadataIdStoredInConfig" computerName="fv-az716-664" duration="00:00:00.0218840" startTime="2023-09-04T10:56:34.0545194+00:00" endTime="2023-09-04T10:56:34.0764075+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="01858270-f720-4da1-aed6-f899eb8f1870">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Bob' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Bob") (0.0s)&#xD;
When I get the UUID metadata with custom for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheUUIDMetadataWithCustomForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the UUID metadata for 'Bob' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheUUIDMetadataForPersona("Bob") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49973198-0a43-4955-bdfb-728cec965ebc" testId="63f82b54-f147-1707-8ae8-1f771750a4c8" testName="GrantAnAccessTokenSuccessfullyWithAnAuthorizedUuid" computerName="fv-az716-664" duration="00:00:00.1153520" startTime="2023-09-04T10:56:32.5877813+00:00" endTime="2023-09-04T10:56:32.7031372+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49973198-0a43-4955-bdfb-728cec965ebc">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.GivenTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
When I grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then the token contains the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheTTL(60) (0.1s)&#xD;
Then the token contains the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Then the token has 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0babe43d-3ef8-4feb-80d9-9c9af2853715" testId="10a87c1f-7e7a-0e53-402e-aefcc00a21da" testName="GetMembershipsForUUID" computerName="fv-az716-664" duration="00:00:00.0270740" startTime="2023-09-04T10:56:33.4781011+00:00" endTime="2023-09-04T10:56:33.5051758+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0babe43d-3ef8-4feb-80d9-9c9af2853715">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
When I get the memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheMemberships() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' and 'PatientMembership' memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMemberships("ChatMembership", "PatientMembership") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b75f41c4-b27e-40d1-aaf8-e75729129f50" testId="ed5af684-441e-e3d8-3bf2-a26f2fd3f117" testName="SetMemberForAChannel" computerName="fv-az716-664" duration="00:00:00.0275870" startTime="2023-09-04T10:56:33.3526167+00:00" endTime="2023-09-04T10:56:33.3802043+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b75f41c4-b27e-40d1-aaf8-e75729129f50">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'AmeliaMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMember("AmeliaMember") (0.0s)&#xD;
And the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I set a channel member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetAChannelMember() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'AmeliaMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMember("AmeliaMember") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="18eab2d4-5498-41c4-8e9b-44a0680e24b2" testId="d717777f-cd83-a14f-a06e-85ad7a167630" testName="GetAUUIDMetadataForId" computerName="fv-az716-664" duration="00:00:00.0787410" startTime="2023-09-04T10:56:33.8912329+00:00" endTime="2023-09-04T10:56:33.9699756+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="18eab2d4-5498-41c4-8e9b-44a0680e24b2">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
When I get the UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheUUIDMetadata() (0.1s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the UUID metadata for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheUUIDMetadataForPersona("Alice") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="978625fc-6896-4e7e-8014-337592700834" testId="17537441-5c46-b29c-7a15-7f733fa6a240" testName="AttemptToGrantAnAccessTokenWhenTtlProvidedExceedsTheMaxTtlConfiguredUseDefaultMax43200ForTheTest" computerName="fv-az716-664" duration="00:00:00.2831230" startTime="2023-09-04T10:56:32.2206319+00:00" endTime="2023-09-04T10:56:32.5036277+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="978625fc-6896-4e7e-8014-337592700834">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 43201&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(43201) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.1s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid ttl'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid ttl") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Range should be 1 to 43200 minute(s).'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Range should be 1...") (0.0s)&#xD;
* the error detail location is 'ttl'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("ttl") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="72e80631-5704-45e8-a647-e13d221536fa" testId="7acf7525-aaca-a5f2-7032-491d9caf1cf8" testName="GetMembershipsForUUIDWithCustomAndChannelCustom" computerName="fv-az716-664" duration="00:00:00.0365650" startTime="2023-09-04T10:56:33.5062761+00:00" endTime="2023-09-04T10:56:33.5428420+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72e80631-5704-45e8-a647-e13d221536fa">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Bob' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Bob") (0.0s)&#xD;
When I get the memberships including custom and channel custom information&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheMembershipsIncludingCustomAndChannelCustomInformation() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'VipChatMembership' and 'DMMembership' memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMemberships("VipChatMembership", "DMMembership") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66a43614-db5f-4dfa-81b7-715b2db45919" testId="9e948d14-1697-7020-7d46-e7d0ab1a839a" testName="RevokeExistingValidToken" computerName="fv-az716-664" duration="00:00:00.0100090" startTime="2023-09-04T10:56:34.3749477+00:00" endTime="2023-09-04T10:56:34.3849570+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66a43614-db5f-4dfa-81b7-715b2db45919">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given a token&#xD;
-&gt; done: FeatureAccessSteps.GivenAToken() (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then I get confirmation that token has been revoked&#xD;
-&gt; done: FeatureAccessSteps.ThenIGetConfirmationThatTokenHasBeenRevoked() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10008eec-1b22-4b9f-a485-880fd0c51521" testId="07a0b332-7585-5132-2931-ba67f585bbfd" testName="RemoveAUUIDMetadataForId" computerName="fv-az716-664" duration="00:00:00.1626489" startTime="2023-09-04T10:56:34.0778941+00:00" endTime="2023-09-04T10:56:34.2405489+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10008eec-1b22-4b9f-a485-880fd0c51521">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
When I remove the UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheUUIDMetadata() (0.2s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="47acbb32-63fb-4342-9edb-812cbbaec29e" testId="4abae91a-e1c2-11c6-c78e-4c0a98abeb41" testName="ManageMembersForAChannel" computerName="fv-az716-664" duration="00:00:00.0430110" startTime="2023-09-04T10:56:33.2858163+00:00" endTime="2023-09-04T10:56:33.3288291+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="47acbb32-63fb-4342-9edb-812cbbaec29e">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMember("PeterMember") (0.0s)&#xD;
And the data for 'AmeliaMember' member that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMemberThatWeWantToRemove("AmeliaMember") (0.0s)&#xD;
And the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I manage channel members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIManageChannelMembers() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMember("PeterMember") (0.0s)&#xD;
And the response does not contain list with 'AmeliaMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseDoesNotContainListWithMember("AmeliaMember") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1c181701-dd2f-4b5c-a667-968558820b13" testId="70fed881-ff3d-cf01-fc50-eec23bec4b15" testName="GetMembersForVipChatChannelWithCustomAndUUIDWithCustom" computerName="fv-az716-664" duration="00:00:00.0330790" startTime="2023-09-04T10:56:33.2432624+00:00" endTime="2023-09-04T10:56:33.2763422+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1c181701-dd2f-4b5c-a667-968558820b13">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'VipChat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("VipChat") (0.0s)&#xD;
When I get the channel members including custom and UUID custom information&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMembersIncludingCustomAndUUIDCustomInformation() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'OliverMember' and 'PeterMember' members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMembers("OliverMember", "PeterMember") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="451187cf-46de-448a-affa-0c1c6a77e5bf" testId="8a1c2bbd-f61b-135c-270f-157e7106103a" testName="GetAChannelWithCustomMetadata" computerName="fv-az716-664" duration="00:00:00.0214610" startTime="2023-09-04T10:56:33.0345148+00:00" endTime="2023-09-04T10:56:33.0559764+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="451187cf-46de-448a-affa-0c1c6a77e5bf">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'DM' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("DM") (0.0s)&#xD;
When I get the channel metadata with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMetadataWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the channel metadata for 'DM' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheChannelMetadataForChannel("DM") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fb1462ff-adaa-40f5-aef9-38bfc04c2cbe" testId="1f73b5a1-d21f-1feb-a5dc-31aa30bfbe2c" testName="SetMembershipForCurrentUser" computerName="fv-az716-664" duration="00:00:00.0291070" startTime="2023-09-04T10:56:33.7590022+00:00" endTime="2023-09-04T10:56:33.7881109+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fb1462ff-adaa-40f5-aef9-38bfc04c2cbe">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
When I set the membership for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheMembershipForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMembership("ChatMembership") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="40a07b7f-e308-410c-a5fa-4a6b70d7a444" testId="046e940e-ed7b-e2be-b9c9-fa82caaefa8a" testName="RemoveMembershipForCurrentUser" computerName="fv-az716-664" duration="00:00:00.0285040" startTime="2023-09-04T10:56:33.6461690+00:00" endTime="2023-09-04T10:56:33.6746743+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="40a07b7f-e308-410c-a5fa-4a6b70d7a444">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembershipThatWeWantToRemove("ChatMembership") (0.0s)&#xD;
When I remove the membership for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheMembershipForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="15b62b35-7751-4eb2-b973-6be9398809df" testId="0c1a37b6-b16e-3d65-7b38-756d59a051b1" testName="GetAllChannelMetadata" computerName="fv-az716-664" duration="00:00:00.0262700" startTime="2023-09-04T10:56:33.0569269+00:00" endTime="2023-09-04T10:56:33.0831977+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="15b62b35-7751-4eb2-b973-6be9398809df">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'Chat' and 'Patient' channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndChannelMetadata("Chat", "Patient") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8e4b1826-ca3a-4140-9345-90dbfafda6b5" testId="3405a88a-853b-5aa4-dc52-211f74db4a9b" testName="GetMembersForAChannel" computerName="fv-az716-664" duration="00:00:00.0416320" startTime="2023-09-04T10:56:33.1921311+00:00" endTime="2023-09-04T10:56:33.2337643+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8e4b1826-ca3a-4140-9345-90dbfafda6b5">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I get the channel members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMembers() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'AmeliaMember' and 'EvaMember' members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMembers("AmeliaMember", "EvaMember") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66459edf-23ea-4aa0-b47b-a3a097bb7773" testId="96ff7052-903d-d61a-0cb2-cdee63831172" testName="RemoveMembership" computerName="fv-az716-664" duration="00:00:00.0361140" startTime="2023-09-04T10:56:33.5969113+00:00" endTime="2023-09-04T10:56:33.6330261+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66459edf-23ea-4aa0-b47b-a3a097bb7773">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
When I remove the membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheMembership() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aad3b138-baa3-48eb-9909-f24c3910ced7" testId="be8b1c28-897b-72b1-79de-44eed3d3394f" testName="RemoveAChannelMetadataForId" computerName="fv-az716-664" duration="00:00:00.0219630" startTime="2023-09-04T10:56:33.1046645+00:00" endTime="2023-09-04T10:56:33.1266282+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aad3b138-baa3-48eb-9909-f24c3910ced7">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I remove the channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5fb34cf5-8dfb-4a60-bc28-71a9b7c29634" testId="ba48247e-b680-05e2-ec8e-cd712552a6ee" testName="GetMembershipsForCurrentUser" computerName="fv-az716-664" duration="00:00:00.0481300" startTime="2023-09-04T10:56:33.4277871+00:00" endTime="2023-09-04T10:56:33.4759189+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5fb34cf5-8dfb-4a60-bc28-71a9b7c29634">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
When I get the memberships for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheMembershipsForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' and 'PatientMembership' memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMemberships("ChatMembership", "PatientMembership") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e56f9b12-bb81-4147-aef2-b4ac429a1ddc" testId="aea0c1c8-e4f2-b00c-e2e5-3958a9100776" testName="ManageMembershipsForAUUID" computerName="fv-az716-664" duration="00:00:00.0432590" startTime="2023-09-04T10:56:33.5509622+00:00" endTime="2023-09-04T10:56:33.5942226+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e56f9b12-bb81-4147-aef2-b4ac429a1ddc">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
And the data for 'PatientMembership' membership that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembershipThatWeWantToRemove("PatientMembership") (0.0s)&#xD;
When I manage memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIManageMemberships() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMembership("ChatMembership") (0.0s)&#xD;
And the response does not contain list with 'PatientMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseDoesNotContainListWithMembership("PatientMembership") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6e7a77a8-7af8-418a-811a-645b78e9e8e4" testId="b811bc2b-ac6c-1eab-5504-b3af1ec9a805" testName="RevokeATokenWithCharactersThatRequireUrlEncoding" computerName="fv-az716-664" duration="00:00:00.0136290" startTime="2023-09-04T10:56:34.3603424+00:00" endTime="2023-09-04T10:56:34.3739723+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6e7a77a8-7af8-418a-811a-645b78e9e8e4">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the token string 'unescaped-_.ABCabc123 escaped;,/?:@&amp;=+$#'&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTokenString("unescaped-_.ABCab...") (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then I get confirmation that token has been revoked&#xD;
-&gt; done: FeatureAccessSteps.ThenIGetConfirmationThatTokenHasBeenRevoked() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dc62e373-cba9-4167-8e0c-10945175c445" testId="219f8da3-cc63-e002-72df-e2f549e52967" testName="GetAllUUIDMetadata" computerName="fv-az716-664" duration="00:00:00.0333010" startTime="2023-09-04T10:56:33.8051655+00:00" endTime="2023-09-04T10:56:33.8384679+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc62e373-cba9-4167-8e0c-10945175c445">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllUUIDMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'Alice' and 'James' UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndUUIDMetadata("Alice", "James") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8b65c9fc-5f5e-453b-8567-d867704b0a2c" testId="b2c9c319-05d3-858f-ecdb-c785279a33e5" testName="RemoveMemberForAChannel" computerName="fv-az716-664" duration="00:00:00.0217260" startTime="2023-09-04T10:56:33.3298852+00:00" endTime="2023-09-04T10:56:33.3516121+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8b65c9fc-5f5e-453b-8567-d867704b0a2c">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
And the data for 'AmeliaMember' member that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMemberThatWeWantToRemove("AmeliaMember") (0.0s)&#xD;
When I remove a channel member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveAChannelMember() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8c89672a-bd10-4846-9437-ba83d55783ca" testId="3a8dac54-e42a-8256-0f95-9b2771dcaeda" testName="RemoveAUUIDMetadataIdStoredInConfig" computerName="fv-az716-664" duration="00:00:00.0499530" startTime="2023-09-04T10:56:34.2625996+00:00" endTime="2023-09-04T10:56:34.3125566+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8c89672a-bd10-4846-9437-ba83d55783ca">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
When I remove the UUID metadata for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheUUIDMetadataForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b51c6b60-db8d-4e4b-aec0-79816dda27a7" testId="5271a851-e8d2-c42c-aad6-49024c68a9d5" testName="GetAllChannelMetadataWithCustom" computerName="fv-az716-664" duration="00:00:00.0195019" startTime="2023-09-04T10:56:33.0842196+00:00" endTime="2023-09-04T10:56:33.1037226+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b51c6b60-db8d-4e4b-aec0-79816dda27a7">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all channel metadata with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllChannelMetadataWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'DM' and 'VipChat' channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndChannelMetadata("DM", "VipChat") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4e3dd26e-254e-42fb-b606-1fe3d5426281" testId="f6a7a690-af73-fab8-0ebf-059ccdbb5495" testName="RevokeInvalidToken" computerName="fv-az716-664" duration="00:00:00.0110980" startTime="2023-09-04T10:56:34.3858778+00:00" endTime="2023-09-04T10:56:34.3969763+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e3dd26e-254e-42fb-b606-1fe3d5426281">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given a token&#xD;
-&gt; done: FeatureAccessSteps.GivenAToken() (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid token'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid token") (0.0s)&#xD;
* the error source is 'revoke'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("revoke") (0.0s)&#xD;
* the error detail message is not empty&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIsNotEmpty() (0.0s)&#xD;
* the error detail location is 'token'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("token") (0.0s)&#xD;
* the error detail location type is 'path'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("path") (0.0s)&#xD;
* the error service is 'Access Manager'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorServiceIs("Access Manager") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="14dbd3ae-cab6-453a-903e-3ad9ddba57fa" testId="446be40b-3f39-dc72-f797-9a3aa2aac484" testName="AttemptToGrantAnAccessTokenWithAllPermissionsEmptyOrFalseAndExpectAServerError" computerName="fv-az716-664" duration="00:00:00.0255050" startTime="2023-09-04T10:56:32.5217001+00:00" endTime="2023-09-04T10:56:32.5472063+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="14dbd3ae-cab6-453a-903e-3ad9ddba57fa">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'uuid-1' UUID resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDResourceAccessPermissions("uuid-1") (0.0s)&#xD;
* deny resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenDenyResourcePermissionGET() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid permissions'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid permissions") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Unexpected value: `permissions.resources.uuids.uuid-1` must be positive and non-zero.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Unexpected value:...") (0.0s)&#xD;
* the error detail location is 'permissions.resources.uuids.uuid-1'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("permissions.resou...") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a08631b3-efb2-4068-a20e-c043b74b8781" testId="86189ae4-95f9-30e4-f4c6-bfa1b9898a62" testName="SetMemberWithCustomForAChannelAndUUIDWithCustom" computerName="fv-az716-664" duration="00:00:00.0335380" startTime="2023-09-04T10:56:33.3812038+00:00" endTime="2023-09-04T10:56:33.4147421+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a08631b3-efb2-4068-a20e-c043b74b8781">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMember("PeterMember") (0.0s)&#xD;
And the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I set a channel member including custom and UUID with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetAChannelMemberIncludingCustomAndUUIDWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMember("PeterMember") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="796d1747-b20b-4585-8903-2676d3e27f2c" testId="5e071152-ee43-67c0-dc5d-67a966171b99" testName="GrantAnAccessTokenWithoutAnAuthorizedUuid" computerName="fv-az716-664" duration="00:00:00.1261529" startTime="2023-09-04T10:56:32.8208954+00:00" endTime="2023-09-04T10:56:32.9470531+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="796d1747-b20b-4585-8903-2676d3e27f2c">
      <Output>
        <StdOut>Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
When I grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIGrantATokenSpecifyingThosePermissions() (0.1s)&#xD;
Then the token contains the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheTTL(60) (0.0s)&#xD;
Then the token does not contain an authorized uuid&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenDoesNotContainAnAuthorizedUuid() (0.0s)&#xD;
Then the token has 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fae70338-3012-4f06-bc7e-8512ec519d33" testId="947b833a-a96c-d64f-e9e3-0beaa935d4d5" testName="SetAChannelMetadata" computerName="fv-az716-664" duration="00:00:00.0294510" startTime="2023-09-04T10:56:33.1276506+00:00" endTime="2023-09-04T10:56:33.1571030+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fae70338-3012-4f06-bc7e-8512ec519d33">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForChannel("Chat") (0.0s)&#xD;
When I set the channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the channel metadata for 'Chat' channel contains updated&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheChannelMetadataForChannelContainsUpdated("Chat") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4e2ab439-32b1-441a-8589-46aae5ecb118" testId="5a108f95-d949-be1c-ba70-794e5a89cb2c" testName="SetAUUIDMetadata" computerName="fv-az716-664" duration="00:00:00.0238810" startTime="2023-09-04T10:56:34.3134532+00:00" endTime="2023-09-04T10:56:34.3373351+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e2ab439-32b1-441a-8589-46aae5ecb118">
      <Output>
        <StdOut>Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForPersona("Alice") (0.0s)&#xD;
When I set the UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheUUIDMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the UUID metadata for 'Alice' persona contains updated&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheUUIDMetadataForPersonaContainsUpdated("Alice") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="RevokeATokenWhileItIsDisabledOnAServer" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="ee450aac-5f02-8238-a55d-792600e33298">
      <Execution id="072e81ac-f496-4778-a186-02bd4cad6667" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.RevokeAnAccessTokenFeature" name="RevokeATokenWhileItIsDisabledOnAServer" />
    </UnitTest>
    <UnitTest name="GetMembersForAChannel" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="3405a88a-853b-5aa4-dc52-211f74db4a9b">
      <Execution id="8e4b1826-ca3a-4140-9345-90dbfafda6b5" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembersFeature" name="GetMembersForAChannel" />
    </UnitTest>
    <UnitTest name="SetMembership" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="c824fd41-84e4-6d43-8411-04262c295a77">
      <Execution id="0485234c-fbd7-4569-81aa-ac31ccb91f40" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="SetMembership" />
    </UnitTest>
    <UnitTest name="RemoveMembership" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="96ff7052-903d-d61a-0cb2-cdee63831172">
      <Execution id="66459edf-23ea-4aa0-b47b-a3a097bb7773" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="RemoveMembership" />
    </UnitTest>
    <UnitTest name="GetAChannelWithCustomMetadata" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="8a1c2bbd-f61b-135c-270f-157e7106103a">
      <Execution id="451187cf-46de-448a-affa-0c1c6a77e5bf" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2ChannelMetadataFeature" name="GetAChannelWithCustomMetadata" />
    </UnitTest>
    <UnitTest name="RevokeATokenWithCharactersThatRequireUrlEncoding" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="b811bc2b-ac6c-1eab-5504-b3af1ec9a805">
      <Execution id="6e7a77a8-7af8-418a-811a-645b78e9e8e4" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.RevokeAnAccessTokenFeature" name="RevokeATokenWithCharactersThatRequireUrlEncoding" />
    </UnitTest>
    <UnitTest name="AttemptToGrantAnAccessTokenWithARegularExpressionContainingASyntaxErrorAndExpectAServerError" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="238d7046-3682-e357-765d-2a21c813602e">
      <Execution id="2e8ba057-995b-4db5-94f0-202764cc37a5" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="AttemptToGrantAnAccessTokenWithARegularExpressionContainingASyntaxErrorAndExpectAServerError" />
    </UnitTest>
    <UnitTest name="GrantAnAccessTokenSuccessfullyWithAnAuthorizedUuid" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="63f82b54-f147-1707-8ae8-1f771750a4c8">
      <Execution id="49973198-0a43-4955-bdfb-728cec965ebc" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="GrantAnAccessTokenSuccessfullyWithAnAuthorizedUuid" />
    </UnitTest>
    <UnitTest name="SetMemberWithCustomForAChannelAndUUIDWithCustom" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="86189ae4-95f9-30e4-f4c6-bfa1b9898a62">
      <Execution id="a08631b3-efb2-4068-a20e-c043b74b8781" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembersFeature" name="SetMemberWithCustomForAChannelAndUUIDWithCustom" />
    </UnitTest>
    <UnitTest name="GetAllUUIDMetadataWithCustom" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="23b61850-f73c-f5eb-17ca-9aaba5f44c54">
      <Execution id="e98814d7-a517-42fd-a320-fd75a8f3d9e2" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="GetAllUUIDMetadataWithCustom" />
    </UnitTest>
    <UnitTest name="GetMembersForVipChatChannelWithCustomAndUUIDWithCustom" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="70fed881-ff3d-cf01-fc50-eec23bec4b15">
      <Execution id="1c181701-dd2f-4b5c-a667-968558820b13" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembersFeature" name="GetMembersForVipChatChannelWithCustomAndUUIDWithCustom" />
    </UnitTest>
    <UnitTest name="AttemptToGrantAnAccessTokenWhenTtlProvidedExceedsTheMaxTtlConfiguredUseDefaultMax43200ForTheTest" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="17537441-5c46-b29c-7a15-7f733fa6a240">
      <Execution id="978625fc-6896-4e7e-8014-337592700834" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="AttemptToGrantAnAccessTokenWhenTtlProvidedExceedsTheMaxTtlConfiguredUseDefaultMax43200ForTheTest" />
    </UnitTest>
    <UnitTest name="ManageMembershipsForAUUID" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="aea0c1c8-e4f2-b00c-e2e5-3958a9100776">
      <Execution id="e56f9b12-bb81-4147-aef2-b4ac429a1ddc" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="ManageMembershipsForAUUID" />
    </UnitTest>
    <UnitTest name="GetMembershipsForCurrentUser" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="ba48247e-b680-05e2-ec8e-cd712552a6ee">
      <Execution id="5fb34cf5-8dfb-4a60-bc28-71a9b7c29634" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="GetMembershipsForCurrentUser" />
    </UnitTest>
    <UnitTest name="SetMembershipForCurrentUser" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="1f73b5a1-d21f-1feb-a5dc-31aa30bfbe2c">
      <Execution id="fb1462ff-adaa-40f5-aef9-38bfc04c2cbe" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="SetMembershipForCurrentUser" />
    </UnitTest>
    <UnitTest name="SetAChannelMetadata" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="947b833a-a96c-d64f-e9e3-0beaa935d4d5">
      <Execution id="fae70338-3012-4f06-bc7e-8512ec519d33" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2ChannelMetadataFeature" name="SetAChannelMetadata" />
    </UnitTest>
    <UnitTest name="GetAUUIDWithCustomMetadataIdStoredInConfig" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="78605226-9a65-4701-5dbe-74fd1152b767">
      <Execution id="01858270-f720-4da1-aed6-f899eb8f1870" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="GetAUUIDWithCustomMetadataIdStoredInConfig" />
    </UnitTest>
    <UnitTest name="GetAUUIDMetadataForId" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="d717777f-cd83-a14f-a06e-85ad7a167630">
      <Execution id="18eab2d4-5498-41c4-8e9b-44a0680e24b2" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="GetAUUIDMetadataForId" />
    </UnitTest>
    <UnitTest name="GetAllChannelMetadata" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="0c1a37b6-b16e-3d65-7b38-756d59a051b1">
      <Execution id="15b62b35-7751-4eb2-b973-6be9398809df" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2ChannelMetadataFeature" name="GetAllChannelMetadata" />
    </UnitTest>
    <UnitTest name="RemoveMembershipForCurrentUser" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="046e940e-ed7b-e2be-b9c9-fa82caaefa8a">
      <Execution id="40a07b7f-e308-410c-a5fa-4a6b70d7a444" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="RemoveMembershipForCurrentUser" />
    </UnitTest>
    <UnitTest name="RemoveMemberForAChannel" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="b2c9c319-05d3-858f-ecdb-c785279a33e5">
      <Execution id="8b65c9fc-5f5e-453b-8567-d867704b0a2c" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembersFeature" name="RemoveMemberForAChannel" />
    </UnitTest>
    <UnitTest name="GetMembershipsForUUID" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="10a87c1f-7e7a-0e53-402e-aefcc00a21da">
      <Execution id="0babe43d-3ef8-4feb-80d9-9c9af2853715" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="GetMembershipsForUUID" />
    </UnitTest>
    <UnitTest name="SetMemberForAChannel" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="ed5af684-441e-e3d8-3bf2-a26f2fd3f117">
      <Execution id="b75f41c4-b27e-40d1-aaf8-e75729129f50" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembersFeature" name="SetMemberForAChannel" />
    </UnitTest>
    <UnitTest name="RemoveAUUIDMetadataForId" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="07a0b332-7585-5132-2931-ba67f585bbfd">
      <Execution id="10008eec-1b22-4b9f-a485-880fd0c51521" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="RemoveAUUIDMetadataForId" />
    </UnitTest>
    <UnitTest name="RemoveAUUIDMetadataIdStoredInConfig" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="3a8dac54-e42a-8256-0f95-9b2771dcaeda">
      <Execution id="8c89672a-bd10-4846-9437-ba83d55783ca" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="RemoveAUUIDMetadataIdStoredInConfig" />
    </UnitTest>
    <UnitTest name="GetAChannelMetadataForId" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="4401ff2d-c38b-51a8-f6b5-791f859c7098">
      <Execution id="39dc4ba5-e70e-4a49-8f4d-57ca0b913fda" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2ChannelMetadataFeature" name="GetAChannelMetadataForId" />
    </UnitTest>
    <UnitTest name="GetAllChannelMetadataWithCustom" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="5271a851-e8d2-c42c-aad6-49024c68a9d5">
      <Execution id="b51c6b60-db8d-4e4b-aec0-79816dda27a7" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2ChannelMetadataFeature" name="GetAllChannelMetadataWithCustom" />
    </UnitTest>
    <UnitTest name="RevokeInvalidToken" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="f6a7a690-af73-fab8-0ebf-059ccdbb5495">
      <Execution id="4e3dd26e-254e-42fb-b606-1fe3d5426281" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.RevokeAnAccessTokenFeature" name="RevokeInvalidToken" />
    </UnitTest>
    <UnitTest name="GrantAnAccessTokenWithAllPermissionsOnAllResourceTypesWithAuthorizedUuid" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="85374129-b31e-6699-e3e3-35edfbf2f310">
      <Execution id="9ecd67dd-0d9b-42db-8c0a-f8fd9f2fa69d" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="GrantAnAccessTokenWithAllPermissionsOnAllResourceTypesWithAuthorizedUuid" />
    </UnitTest>
    <UnitTest name="GetMembershipsForUUIDWithCustomAndChannelCustom" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="7acf7525-aaca-a5f2-7032-491d9caf1cf8">
      <Execution id="72e80631-5704-45e8-a647-e13d221536fa" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembershipsFeature" name="GetMembershipsForUUIDWithCustomAndChannelCustom" />
    </UnitTest>
    <UnitTest name="RemoveAChannelMetadataForId" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="be8b1c28-897b-72b1-79de-44eed3d3394f">
      <Execution id="aad3b138-baa3-48eb-9909-f24c3910ced7" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2ChannelMetadataFeature" name="RemoveAChannelMetadataForId" />
    </UnitTest>
    <UnitTest name="AttemptToGrantAnAccessTokenWithAllPermissionsEmptyOrFalseAndExpectAServerError" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="446be40b-3f39-dc72-f797-9a3aa2aac484">
      <Execution id="14dbd3ae-cab6-453a-903e-3ad9ddba57fa" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="AttemptToGrantAnAccessTokenWithAllPermissionsEmptyOrFalseAndExpectAServerError" />
    </UnitTest>
    <UnitTest name="AttemptToGrantAnAccessTokenWithARegularExpressionContainingCapturingGroupsAndExpectAServerError" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="0992672a-4884-80d0-5142-7d4a75036ed9">
      <Execution id="78fbcb91-5b1a-41e7-a250-fb3180d00209" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="AttemptToGrantAnAccessTokenWithARegularExpressionContainingCapturingGroupsAndExpectAServerError" />
    </UnitTest>
    <UnitTest name="GetAllUUIDMetadata" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="219f8da3-cc63-e002-72df-e2f549e52967">
      <Execution id="dc62e373-cba9-4167-8e0c-10945175c445" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="GetAllUUIDMetadata" />
    </UnitTest>
    <UnitTest name="SetAUUIDMetadata" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="5a108f95-d949-be1c-ba70-794e5a89cb2c">
      <Execution id="4e2ab439-32b1-441a-8589-46aae5ecb118" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2UUIDMetadataFeature" name="SetAUUIDMetadata" />
    </UnitTest>
    <UnitTest name="GrantAnAccessTokenWithoutAnAuthorizedUuid" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="5e071152-ee43-67c0-dc5d-67a966171b99">
      <Execution id="796d1747-b20b-4585-8903-2676d3e27f2c" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.GrantAnAccessTokenFeature" name="GrantAnAccessTokenWithoutAnAuthorizedUuid" />
    </UnitTest>
    <UnitTest name="RevokeExistingValidToken" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="9e948d14-1697-7020-7d46-e7d0ab1a839a">
      <Execution id="66a43614-db5f-4dfa-81b7-715b2db45919" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.RevokeAnAccessTokenFeature" name="RevokeExistingValidToken" />
    </UnitTest>
    <UnitTest name="ManageMembersForAChannel" storage="d:\a\c-sharp\c-sharp\src\unittests\acceptancetests\bin\debug\net6.0\acceptancetests.dll" id="4abae91a-e1c2-11c6-c78e-4c0a98abeb41">
      <Execution id="47acbb32-63fb-4342-9edb-812cbbaec29e" />
      <TestMethod codeBase="D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll" adapterTypeName="executor://nunit3testexecutor/" className="AcceptanceTests.Features.ObjectsV2MembersFeature" name="ManageMembersForAChannel" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="238d7046-3682-e357-765d-2a21c813602e" executionId="2e8ba057-995b-4db5-94f0-202764cc37a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ee450aac-5f02-8238-a55d-792600e33298" executionId="072e81ac-f496-4778-a186-02bd4cad6667" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c824fd41-84e4-6d43-8411-04262c295a77" executionId="0485234c-fbd7-4569-81aa-ac31ccb91f40" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0992672a-4884-80d0-5142-7d4a75036ed9" executionId="78fbcb91-5b1a-41e7-a250-fb3180d00209" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4401ff2d-c38b-51a8-f6b5-791f859c7098" executionId="39dc4ba5-e70e-4a49-8f4d-57ca0b913fda" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="23b61850-f73c-f5eb-17ca-9aaba5f44c54" executionId="e98814d7-a517-42fd-a320-fd75a8f3d9e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="85374129-b31e-6699-e3e3-35edfbf2f310" executionId="9ecd67dd-0d9b-42db-8c0a-f8fd9f2fa69d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78605226-9a65-4701-5dbe-74fd1152b767" executionId="01858270-f720-4da1-aed6-f899eb8f1870" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63f82b54-f147-1707-8ae8-1f771750a4c8" executionId="49973198-0a43-4955-bdfb-728cec965ebc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="10a87c1f-7e7a-0e53-402e-aefcc00a21da" executionId="0babe43d-3ef8-4feb-80d9-9c9af2853715" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed5af684-441e-e3d8-3bf2-a26f2fd3f117" executionId="b75f41c4-b27e-40d1-aaf8-e75729129f50" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d717777f-cd83-a14f-a06e-85ad7a167630" executionId="18eab2d4-5498-41c4-8e9b-44a0680e24b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="17537441-5c46-b29c-7a15-7f733fa6a240" executionId="978625fc-6896-4e7e-8014-337592700834" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7acf7525-aaca-a5f2-7032-491d9caf1cf8" executionId="72e80631-5704-45e8-a647-e13d221536fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9e948d14-1697-7020-7d46-e7d0ab1a839a" executionId="66a43614-db5f-4dfa-81b7-715b2db45919" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="07a0b332-7585-5132-2931-ba67f585bbfd" executionId="10008eec-1b22-4b9f-a485-880fd0c51521" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4abae91a-e1c2-11c6-c78e-4c0a98abeb41" executionId="47acbb32-63fb-4342-9edb-812cbbaec29e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="70fed881-ff3d-cf01-fc50-eec23bec4b15" executionId="1c181701-dd2f-4b5c-a667-968558820b13" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8a1c2bbd-f61b-135c-270f-157e7106103a" executionId="451187cf-46de-448a-affa-0c1c6a77e5bf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f73b5a1-d21f-1feb-a5dc-31aa30bfbe2c" executionId="fb1462ff-adaa-40f5-aef9-38bfc04c2cbe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="046e940e-ed7b-e2be-b9c9-fa82caaefa8a" executionId="40a07b7f-e308-410c-a5fa-4a6b70d7a444" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0c1a37b6-b16e-3d65-7b38-756d59a051b1" executionId="15b62b35-7751-4eb2-b973-6be9398809df" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3405a88a-853b-5aa4-dc52-211f74db4a9b" executionId="8e4b1826-ca3a-4140-9345-90dbfafda6b5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96ff7052-903d-d61a-0cb2-cdee63831172" executionId="66459edf-23ea-4aa0-b47b-a3a097bb7773" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be8b1c28-897b-72b1-79de-44eed3d3394f" executionId="aad3b138-baa3-48eb-9909-f24c3910ced7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ba48247e-b680-05e2-ec8e-cd712552a6ee" executionId="5fb34cf5-8dfb-4a60-bc28-71a9b7c29634" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aea0c1c8-e4f2-b00c-e2e5-3958a9100776" executionId="e56f9b12-bb81-4147-aef2-b4ac429a1ddc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b811bc2b-ac6c-1eab-5504-b3af1ec9a805" executionId="6e7a77a8-7af8-418a-811a-645b78e9e8e4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="219f8da3-cc63-e002-72df-e2f549e52967" executionId="dc62e373-cba9-4167-8e0c-10945175c445" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b2c9c319-05d3-858f-ecdb-c785279a33e5" executionId="8b65c9fc-5f5e-453b-8567-d867704b0a2c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a8dac54-e42a-8256-0f95-9b2771dcaeda" executionId="8c89672a-bd10-4846-9437-ba83d55783ca" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5271a851-e8d2-c42c-aad6-49024c68a9d5" executionId="b51c6b60-db8d-4e4b-aec0-79816dda27a7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f6a7a690-af73-fab8-0ebf-059ccdbb5495" executionId="4e3dd26e-254e-42fb-b606-1fe3d5426281" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="446be40b-3f39-dc72-f797-9a3aa2aac484" executionId="14dbd3ae-cab6-453a-903e-3ad9ddba57fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="86189ae4-95f9-30e4-f4c6-bfa1b9898a62" executionId="a08631b3-efb2-4068-a20e-c043b74b8781" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5e071152-ee43-67c0-dc5d-67a966171b99" executionId="796d1747-b20b-4585-8903-2676d3e27f2c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="947b833a-a96c-d64f-e9e3-0beaa935d4d5" executionId="fae70338-3012-4f06-bc7e-8512ec519d33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5a108f95-d949-be1c-ba70-794e5a89cb2c" executionId="4e2ab439-32b1-441a-8589-46aae5ecb118" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="38" executed="38" passed="38" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 3.17.0.0: Test execution started&#xD;
Running all tests in D:\a\c-sharp\c-sharp\src\UnitTests\AcceptanceTests\bin\Debug\net6.0\AcceptanceTests.dll&#xD;
   NUnit3TestExecutor discovered 38 of 38 NUnit test cases&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 43201&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(43201) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.1s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid ttl'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid ttl") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Range should be 1 to 43200 minute(s).'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Range should be 1...") (0.0s)&#xD;
* the error detail location is 'ttl'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("ttl") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'uuid-1' UUID resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDResourceAccessPermissions("uuid-1") (0.0s)&#xD;
* deny resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenDenyResourcePermissionGET() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid permissions'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid permissions") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Unexpected value: `permissions.resources.uuids.uuid-1` must be positive and non-zero.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Unexpected value:...") (0.0s)&#xD;
* the error detail location is 'permissions.resources.uuids.uuid-1'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("permissions.resou...") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the '!&lt;[^&gt;]+&gt;++' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDPatternAccessPermissions("!&lt;[^&gt;]+&gt;++") (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid RegExp'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid RegExp") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Syntax error: multiple repeat.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Syntax error: mul...") (0.0s)&#xD;
* the error detail location is 'permissions.patterns.uuids.!&lt;[^&gt;]+&gt;++'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("permissions.patte...") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the '(!&lt;[^&gt;]+&gt;)+' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDPatternAccessPermissions("(!&lt;[^&gt;]+&gt;)+") (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
When I attempt to grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIAttemptToGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid RegExp'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid RegExp") (0.0s)&#xD;
* the error source is 'grant'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("grant") (0.0s)&#xD;
* the error detail message is 'Only non-capturing groups are allowed. Try replacing `(` with `(?:`.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Only non-capturin...") (0.0s)&#xD;
* the error detail location is 'permissions.patterns.uuids.(!&lt;[^&gt;]+&gt;)+'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("permissions.patte...") (0.0s)&#xD;
* the error detail location type is 'body'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("body") (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.GivenTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
When I grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then the token contains the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheTTL(60) (0.1s)&#xD;
Then the token contains the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Then the token has 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.GivenTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
* grant resource permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionWRITE() (0.0s)&#xD;
* grant resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionGET() (0.0s)&#xD;
* grant resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionMANAGE() (0.0s)&#xD;
* grant resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionUPDATE() (0.0s)&#xD;
* grant resource permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionJOIN() (0.0s)&#xD;
* grant resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionDELETE() (0.0s)&#xD;
Given the 'channel_group-1' CHANNEL_GROUP resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNEL_GROUPResourceAccessPermissions("channel_group-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
* grant resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionMANAGE() (0.0s)&#xD;
Given the 'uuid-1' UUID resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDResourceAccessPermissions("uuid-1") (0.0s)&#xD;
* grant resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionGET() (0.0s)&#xD;
* grant resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionUPDATE() (0.0s)&#xD;
* grant resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionDELETE() (0.0s)&#xD;
Given the '^channel-\S*$' CHANNEL pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELPatternAccessPermissions("^channel-\S*$") (0.0s)&#xD;
* grant pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionREAD() (0.0s)&#xD;
* grant pattern permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionWRITE() (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
* grant pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionMANAGE() (0.0s)&#xD;
* grant pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionUPDATE() (0.0s)&#xD;
* grant pattern permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionJOIN() (0.0s)&#xD;
* grant pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionDELETE() (0.0s)&#xD;
Given the '^:channel_group-\S*$' CHANNEL_GROUP pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNEL_GROUPPatternAccessPermissions("^:channel_group-\S*$") (0.0s)&#xD;
* grant pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionREAD() (0.0s)&#xD;
* grant pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionMANAGE() (0.0s)&#xD;
Given the '^uuid-\S*$' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheUUIDPatternAccessPermissions("^uuid-\S*$") (0.0s)&#xD;
* grant pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionGET() (0.0s)&#xD;
* grant pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionUPDATE() (0.0s)&#xD;
* grant pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantPatternPermissionDELETE() (0.0s)&#xD;
When I grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIGrantATokenSpecifyingThosePermissions() (0.0s)&#xD;
Then the token contains the authorized UUID "test-authorized-uuid"&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheAuthorizedUUID("test-authorized-uuid") (0.0s)&#xD;
Then the token contains the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheTTL(60) (0.0s)&#xD;
Then the token has 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)&#xD;
* token resource permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionWRITE() (0.0s)&#xD;
* token resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionGET() (0.0s)&#xD;
* token resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionMANAGE() (0.0s)&#xD;
* token resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionUPDATE() (0.0s)&#xD;
* token resource permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionJOIN() (0.0s)&#xD;
* token resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionDELETE() (0.0s)&#xD;
Then the token has 'channel_group-1' CHANNEL_GROUP resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNEL_GROUPResourceAccessPermissions("channel_group-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)&#xD;
* token resource permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionMANAGE() (0.0s)&#xD;
Then the token has 'uuid-1' UUID resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasUUIDResourceAccessPermissions("uuid-1") (0.0s)&#xD;
* token resource permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionGET() (0.0s)&#xD;
* token resource permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionUPDATE() (0.0s)&#xD;
* token resource permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionDELETE() (0.0s)&#xD;
Then the token has '^channel-\S*$' CHANNEL pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELPatternAccessPermissions("^channel-\S*$") (0.0s)&#xD;
* token pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionREAD() (0.0s)&#xD;
* token pattern permission WRITE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionWRITE() (0.0s)&#xD;
* token pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionGET() (0.0s)&#xD;
* token pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionMANAGE() (0.0s)&#xD;
* token pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionUPDATE() (0.0s)&#xD;
* token pattern permission JOIN&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionJOIN() (0.0s)&#xD;
* token pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionDELETE() (0.0s)&#xD;
Then the token has '^:channel_group-\S*$' CHANNEL_GROUP pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNEL_GROUPPatternAccessPermissions("^:channel_group-\S*$") (0.0s)&#xD;
* token pattern permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionREAD() (0.0s)&#xD;
* token pattern permission MANAGE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionMANAGE() (0.0s)&#xD;
Then the token has '^uuid-\S*$' UUID pattern access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasUUIDPatternAccessPermissions("^uuid-\S*$") (0.0s)&#xD;
* token pattern permission GET&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionGET() (0.0s)&#xD;
* token pattern permission UPDATE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionUPDATE() (0.0s)&#xD;
* token pattern permission DELETE&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenPatternPermissionDELETE() (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTTL(60) (0.0s)&#xD;
Given the 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.GivenTheCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* grant resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.GivenGrantResourcePermissionREAD() (0.0s)&#xD;
When I grant a token specifying those permissions&#xD;
-&gt; done: FeatureAccessSteps.WhenIGrantATokenSpecifyingThosePermissions() (0.1s)&#xD;
Then the token contains the TTL 60&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenContainsTheTTL(60) (0.0s)&#xD;
Then the token does not contain an authorized uuid&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenDoesNotContainAnAuthorizedUuid() (0.0s)&#xD;
Then the token has 'channel-1' CHANNEL resource access permissions&#xD;
-&gt; done: FeatureAccessSteps.ThenTheTokenHasCHANNELResourceAccessPermissions("channel-1") (0.0s)&#xD;
* token resource permission READ&#xD;
-&gt; done: FeatureAccessSteps.ThenTokenResourcePermissionREAD() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I get the channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the channel metadata for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheChannelMetadataForChannel("Chat") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'DM' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("DM") (0.0s)&#xD;
When I get the channel metadata with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMetadataWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the channel metadata for 'DM' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheChannelMetadataForChannel("DM") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'Chat' and 'Patient' channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndChannelMetadata("Chat", "Patient") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all channel metadata with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllChannelMetadataWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'DM' and 'VipChat' channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndChannelMetadata("DM", "VipChat") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I remove the channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForChannel("Chat") (0.0s)&#xD;
When I set the channel metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheChannelMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the channel metadata for 'Chat' channel contains updated&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheChannelMetadataForChannelContainsUpdated("Chat") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I get the channel members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMembers() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'AmeliaMember' and 'EvaMember' members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMembers("AmeliaMember", "EvaMember") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'VipChat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("VipChat") (0.0s)&#xD;
When I get the channel members including custom and UUID custom information&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheChannelMembersIncludingCustomAndUUIDCustomInformation() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'OliverMember' and 'PeterMember' members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMembers("OliverMember", "PeterMember") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMember("PeterMember") (0.0s)&#xD;
And the data for 'AmeliaMember' member that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMemberThatWeWantToRemove("AmeliaMember") (0.0s)&#xD;
And the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I manage channel members&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIManageChannelMembers() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMember("PeterMember") (0.0s)&#xD;
And the response does not contain list with 'AmeliaMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseDoesNotContainListWithMember("AmeliaMember") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
And the data for 'AmeliaMember' member that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMemberThatWeWantToRemove("AmeliaMember") (0.0s)&#xD;
When I remove a channel member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveAChannelMember() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'AmeliaMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMember("AmeliaMember") (0.0s)&#xD;
And the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I set a channel member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetAChannelMember() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'AmeliaMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMember("AmeliaMember") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMember("PeterMember") (0.0s)&#xD;
And the id for 'Chat' channel&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForChannel("Chat") (0.0s)&#xD;
When I set a channel member including custom and UUID with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetAChannelMemberIncludingCustomAndUUIDWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'PeterMember' member&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMember("PeterMember") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
When I get the memberships for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheMembershipsForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' and 'PatientMembership' memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMemberships("ChatMembership", "PatientMembership") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
When I get the memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheMemberships() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' and 'PatientMembership' memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMemberships("ChatMembership", "PatientMembership") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Bob' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Bob") (0.0s)&#xD;
When I get the memberships including custom and channel custom information&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheMembershipsIncludingCustomAndChannelCustomInformation() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'VipChatMembership' and 'DMMembership' memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndMemberships("VipChatMembership", "DMMembership") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
And the data for 'PatientMembership' membership that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembershipThatWeWantToRemove("PatientMembership") (0.0s)&#xD;
When I manage memberships&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIManageMemberships() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMembership("ChatMembership") (0.0s)&#xD;
And the response does not contain list with 'PatientMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseDoesNotContainListWithMembership("PatientMembership") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
When I remove the membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheMembership() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership that we want to remove&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembershipThatWeWantToRemove("ChatMembership") (0.0s)&#xD;
When I remove the membership for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheMembershipForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
When I set the membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheMembership() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMembership("ChatMembership") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
And the data for 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForMembership("ChatMembership") (0.0s)&#xD;
When I set the membership for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheMembershipForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'ChatMembership' membership&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithMembership("ChatMembership") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllUUIDMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'Alice' and 'James' UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndUUIDMetadata("Alice", "James") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
When I get all UUID metadata with custom&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetAllUUIDMetadataWithCustom() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the response contains list with 'Bob' and 'Lisa' UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheResponseContainsListWithAndUUIDMetadata("Bob", "Lisa") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
When I get the UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheUUIDMetadata() (0.1s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the UUID metadata for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheUUIDMetadataForPersona("Alice") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Bob' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Bob") (0.0s)&#xD;
When I get the UUID metadata with custom for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIGetTheUUIDMetadataWithCustomForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the UUID metadata for 'Bob' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheUUIDMetadataForPersona("Bob") (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the id for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheIdForPersona("Alice") (0.0s)&#xD;
When I remove the UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheUUIDMetadata() (0.2s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given current user is 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenCurrentUserIsPersona("Alice") (0.0s)&#xD;
When I remove the UUID metadata for current user&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenIRemoveTheUUIDMetadataForCurrentUser() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
&#xD;
Given I have a keyset with Objects V2 enabled&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenIHaveAKeysetWithObjectsVEnabled(2) (0.0s)&#xD;
Given the data for 'Alice' persona&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.GivenTheDataForPersona("Alice") (0.0s)&#xD;
When I set the UUID metadata&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.WhenISetTheUUIDMetadata() (0.0s)&#xD;
Then I receive a successful response&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenIReceiveASuccessfulResponse() (0.0s)&#xD;
And the UUID metadata for 'Alice' persona contains updated&#xD;
-&gt; done: FeatureObjectsV2MetadataSteps.ThenTheUUIDMetadataForPersonaContainsUpdated("Alice") (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given a token&#xD;
-&gt; done: FeatureAccessSteps.GivenAToken() (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Feature disabled'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Feature disabled") (0.0s)&#xD;
* the error source is 'revoke'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("revoke") (0.0s)&#xD;
* the error detail message is 'Token revocation is disabled.'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIs("Token revocation ...") (0.0s)&#xD;
* the error detail location is 'subscribe-key'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("subscribe-key") (0.0s)&#xD;
* the error detail location type is 'path'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("path") (0.0s)&#xD;
* the error service is 'Access Manager'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorServiceIs("Access Manager") (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given the token string 'unescaped-_.ABCabc123 escaped;,/?:@&amp;=+$#'&#xD;
-&gt; done: FeatureAccessSteps.GivenTheTokenString("unescaped-_.ABCab...") (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then I get confirmation that token has been revoked&#xD;
-&gt; done: FeatureAccessSteps.ThenIGetConfirmationThatTokenHasBeenRevoked() (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given a token&#xD;
-&gt; done: FeatureAccessSteps.GivenAToken() (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then I get confirmation that token has been revoked&#xD;
-&gt; done: FeatureAccessSteps.ThenIGetConfirmationThatTokenHasBeenRevoked() (0.0s)&#xD;
&#xD;
Given I have a keyset with access manager enabled&#xD;
-&gt; done: FeatureAccessSteps.GivenIHaveAKeysetWithAccessManagerEnabled() (0.0s)&#xD;
Given a token&#xD;
-&gt; done: FeatureAccessSteps.GivenAToken() (0.0s)&#xD;
When I revoke a token&#xD;
-&gt; done: FeatureAccessSteps.WhenIRevokeAToken() (0.0s)&#xD;
Then an error is returned&#xD;
-&gt; done: FeatureAccessSteps.ThenAnErrorIsReturned() (0.0s)&#xD;
* the error status code is 400&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorStatusCodeIs(400) (0.0s)&#xD;
* the error message is 'Invalid token'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorMessageIs("Invalid token") (0.0s)&#xD;
* the error source is 'revoke'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorSourceIs("revoke") (0.0s)&#xD;
* the error detail message is not empty&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailMessageIsNotEmpty() (0.0s)&#xD;
* the error detail location is 'token'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationIs("token") (0.0s)&#xD;
* the error detail location type is 'path'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorDetailLocationTypeIs("path") (0.0s)&#xD;
* the error service is 'Access Manager'&#xD;
-&gt; done: FeatureAccessSteps.ThenTheErrorServiceIs("Access Manager") (0.0s)&#xD;
&#xD;
NUnit Adapter 3.17.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>