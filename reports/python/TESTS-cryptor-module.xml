<testsuite name="cryptor-module.Crypto module" tests="32" errors="0" failures="0" skipped="0" time="0.019392" timestamp="2024-10-02T11:34:30.716013" hostname="runner"><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.1 " status="passed" time="0.000513"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.1 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-legacy-civ.jpg' file ... passed in 0.000s
    Then I receive 'unknown cryptor error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.2 " status="passed" time="0.00037"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.2 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-no-version.txt' file ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.3 " status="passed" time="0.000399"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.3 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-unknown-acrh.jpg' file ... passed in 0.000s
    Then I receive 'unknown cryptor error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.4 " status="passed" time="0.000303"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.4 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-short.txt' file ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.5 " status="passed" time="0.00028"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.5 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-unknown.txt' file ... passed in 0.000s
    Then I receive 'unknown cryptor error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.6 " status="passed" time="0.000278"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.6 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'empty-file-cryptor-v1-acrh.txt' file ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.7 " status="passed" time="0.000816"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.7 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-acrh.jpg' file ... passed in 0.001s
    Then I receive 'success' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.1 " status="passed" time="0.000368"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.2 " status="passed" time="0.000354"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.3 " status="passed" time="0.000342"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.3 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.4 " status="passed" time="0.000315"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.4 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.1 " status="passed" time="0.000459"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.2 " status="passed" time="0.000422"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.3 " status="passed" time="0.00046"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.3 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.4 " status="passed" time="0.000487"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.4 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'empty-file-cryptor-legacy-riv.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.5 " status="passed" time="0.000472"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.5 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'empty-file-cryptor-v1-acrh.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.1 " status="passed" time="0.002115"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'random' vector ... passed in 0.000s
    When I encrypt 'file.jpg' file as 'binary' ... passed in 0.001s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.001s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.2 " status="passed" time="0.001936"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'constant' vector ... passed in 0.000s
    When I encrypt 'file.jpg' file as 'binary' ... passed in 0.001s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.001s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.3 " status="passed" time="0.000819"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.3 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'random' vector ... passed in 0.000s
    When I encrypt 'file.txt' file as 'binary' ... passed in 0.000s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.4 " status="passed" time="0.000597"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.4 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'constant' vector ... passed in 0.000s
    When I encrypt 'file.txt' file as 'binary' ... passed in 0.000s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.1 " status="passed" time="0.00082"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-civ.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.2 " status="passed" time="0.000751"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-riv.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.3 " status="passed" time="0.000445"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.3 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-civ.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.4 " status="passed" time="0.000426"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.4 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-riv.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.5 " status="passed" time="0.000722"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.5 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-legacy-civ.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.6 " status="passed" time="0.000727"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.6 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-legacy-riv.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.7 " status="passed" time="0.000388"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.7 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-legacy-civ.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.8 " status="passed" time="0.000401"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.8 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-legacy-riv.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.9 " status="passed" time="0.000729"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.9 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-acrh.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.10 " status="passed" time="0.000389"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.10 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-acrh.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Crypto module can handle encrypted data from different cryptors -- @1.1 " status="passed" time="0.000765"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Crypto module can handle encrypted data from different cryptors -- @1.1 
    Given Crypto module with default 'legacy' and additional 'acrh' cryptors ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-civ.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Crypto module can handle encrypted data from different cryptors -- @1.2 " status="passed" time="0.000724"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Crypto module can handle encrypted data from different cryptors -- @1.2 
    Given Crypto module with default 'acrh' and additional 'legacy' cryptors ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-legacy-riv.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>