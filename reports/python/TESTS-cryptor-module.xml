<testsuite name="cryptor-module.Crypto module" tests="32" errors="0" failures="0" skipped="0" time="0.021786" timestamp="2024-02-08T11:40:04.001077" hostname="fv-az1206-958"><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.1 " status="passed" time="0.000548"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.1 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-legacy-civ.jpg' file ... passed in 0.000s
    Then I receive 'unknown cryptor error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.2 " status="passed" time="0.000369"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.2 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-no-version.txt' file ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.3 " status="passed" time="0.000376"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.3 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-unknown-acrh.jpg' file ... passed in 0.000s
    Then I receive 'unknown cryptor error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.4 " status="passed" time="0.000319"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.4 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-short.txt' file ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.5 " status="passed" time="0.000429"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.5 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-unknown.txt' file ... passed in 0.000s
    Then I receive 'unknown cryptor error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.6 " status="passed" time="0.000398"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.6 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'empty-file-cryptor-v1-acrh.txt' file ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="AES-CBC cryptor data header can be processed -- @1.7 " status="passed" time="0.000842"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: AES-CBC cryptor data header can be processed -- @1.7 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-acrh.jpg' file ... passed in 0.001s
    Then I receive 'success' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.1 " status="passed" time="0.000551"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.2 " status="passed" time="0.000507"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.3 " status="passed" time="0.000504"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.3 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data encryption should fail -- @1.4 " status="passed" time="0.0005"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data encryption should fail -- @1.4 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I encrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'encryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.1 " status="passed" time="0.000484"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.2 " status="passed" time="0.000535"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.3 " status="passed" time="0.000505"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.3 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'empty-file.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.4 " status="passed" time="0.000523"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.4 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'empty-file-cryptor-legacy-riv.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Empty data decryption should fail -- @1.5 " status="passed" time="0.000504"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Empty data decryption should fail -- @1.5 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'empty-file-cryptor-v1-acrh.txt' file as 'binary' ... passed in 0.000s
    Then I receive 'decryption error' ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.1 " status="passed" time="0.001782"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'random' vector ... passed in 0.000s
    When I encrypt 'file.jpg' file as 'binary' ... passed in 0.001s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.2 " status="passed" time="0.001644"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'constant' vector ... passed in 0.000s
    When I encrypt 'file.jpg' file as 'binary' ... passed in 0.001s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.3 " status="passed" time="0.000815"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.3 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'random' vector ... passed in 0.000s
    When I encrypt 'file.txt' file as 'binary' ... passed in 0.000s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.4 " status="passed" time="0.000751"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Data encrypted with legacy AES-CBC cryptor is decryptable with legacy implementation -- @1.4 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    Given Legacy code with 'pubnubenigma' cipher key and 'constant' vector ... passed in 0.000s
    When I encrypt 'file.txt' file as 'binary' ... passed in 0.000s
    Then Successfully decrypt an encrypted file with legacy code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.1 " status="passed" time="0.000994"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.1 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-civ.jpg' file as 'binary' ... passed in 0.001s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.2 " status="passed" time="0.000933"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.2 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-riv.jpg' file as 'binary' ... passed in 0.001s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.3 " status="passed" time="0.000576"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.3 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-civ.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.4 " status="passed" time="0.000559"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.4 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-riv.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.5 " status="passed" time="0.000881"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.5 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-legacy-civ.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.6 " status="passed" time="0.000852"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.6 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-legacy-riv.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.7 " status="passed" time="0.000533"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.7 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-legacy-civ.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.8 " status="passed" time="0.000526"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.8 
    Given Crypto module with 'legacy' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-legacy-riv.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.9 " status="passed" time="0.000854"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.9 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-acrh.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Cryptor is able to process sample files as binary -- @1.10 " status="passed" time="0.00052"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Cryptor is able to process sample files as binary -- @1.10 
    Given Crypto module with 'acrh' cryptor ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with '-' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-v1-acrh.txt' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.txt' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Crypto module can handle encrypted data from different cryptors -- @1.1 " status="passed" time="0.000844"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Crypto module can handle encrypted data from different cryptors -- @1.1 
    Given Crypto module with default 'legacy' and additional 'acrh' cryptors ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'constant' vector ... passed in 0.000s
    When I decrypt 'file-cryptor-legacy-civ.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="cryptor-module.Crypto module" name="Crypto module can handle encrypted data from different cryptors -- @1.2 " status="passed" time="0.00083"><system-out>
<![CDATA[
@scenario.begin
  Scenario Outline: Crypto module can handle encrypted data from different cryptors -- @1.2 
    Given Crypto module with default 'acrh' and additional 'legacy' cryptors ... passed in 0.000s
    * with 'pubnubenigma' cipher key ... passed in 0.000s
    * with 'random' vector ... passed in 0.000s
    When I decrypt 'file-legacy-riv.jpg' file as 'binary' ... passed in 0.000s
    Then Decrypted file content equal to the 'file.jpg' file content ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>